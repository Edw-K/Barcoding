#include shk_barcode_Print.vih
#include Marker.vih
#include GetKau.vih
#include shk_barcodeFunc.vih
#include shk_barcode_Generate.vih
#include SHK_BASE.vih
#include SHK_TEMPLATES.vih
//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 9.1
// Функции для работы с штрих кодом 
//------------------------------------------------------------------------------
const
 coNoFiltr_All = 0 ; // показывать все штрих коды без фильтров по типу дркумента
end;
interface shk_barcode_Generate 'Просмотр/создание штрихкодов в системе';
show (,,46,5);

Procedure AddNewBarcodes; forward;
Function SelectObjects: string; forward;
//Function getStringObjectDescription(__pTidkGal : word; _crec : comp): string;
#include GetKau.var
create view
var
  _pTypeTSDARMUSER : word;
  _cDoc : comp;

   pTable
 , ptiDkGal : string;

  _vidSoprSelect : word;

   __TidkGal
 , __SelectedObject : string;

 __MarkerID : tpTr;

  _iSHK_BASE : SHK_BASE new;
  _iShk_BarcodeFunc : iShk_BarcodeFunc new;

 pMarkerKS  : IMarker(Marker) new;
 pMarkerINV : IMarker(Marker) new;
 pMarkerBox : IMarker(Marker) new;
 pMarkerBarCodeLink : IMarker(Marker) new;
 as select
   shk_barcodeLink.nrec
  , _iSHK_BASE.getTableCodeByViddoc(__TidkGal) (Fieldname = __wTable)
  , getStringObjectDescription(shk_barcodeLink.TidkGal, shk_barcodeLink.crec) (Fieldname = ObjectString)
 from
     shk_barcodeLink
   , x$files
//   , KatDoc

   , Katsopr  KS_SELECT
   , KatOrg   ks_Org
   , KatPodr  ks_PodrFrom
   , KatPodr  ks_PodrTo
   , katMOl   ks_MolFrom
   , katMOl   ks_MolTo
   , KatNotes ks_Note

   , InvTab INV_SELECT
   , katpodr inv_podr
   , katmol inv_mol
   , katnotes INV_NOTE

   , KatBox KATBOX_SELECT
   , KatPodr Box_podr
   , KatMc Box_mc
   , katmc
   , tTypeObj
   , tTypeObj tTypeObj_select

   , KATBOX KATBOX_Show
   , InvTab InvTab_Show
   , Katpodr Katpodr_Show

   , katSopr  KS_gen
   , spSopr   spSopr_gen
   , SOPRORDB SOPRORDB_gen
   , InBoxP    InBoxP_gen
   , shk_barcodeLink shk_barcodeLink_gen

   , InvTab Inv_gen
   , SpInvTab SpInvTab_gen

   , SHK_TSD_ARM_USER SHK_TSD
   , SHK_TSD_ARM_USER SHK_ARM
   , SHK_TSD_ARM_USER SHK_USER
   , SHK_TSD_ARM_USER SHK_Browse
   , katParty

where ((
      shk_barcodeLink.wTable == x$files.xf$code
  and shk_barcodeLink.tidkGal == tTypeObj.tidkGal


  and __TidkGal == tTypeObj_select.tidkGal

            and _vidSoprSelect == KS_SELECT.vidSopr
                        and 0 <<= KS_SELECT.dsopr
  and     KS_SELECT.cNote == ks_Note.nrec
  and      KS_SELECT.cOrg == ks_Org.nrec
  and KS_SELECT.cPodrFrom == ks_PodrFrom.nrec
  and KS_SELECT.cPodrTo   == ks_PodrTo.nrec
  and KS_SELECT.cMolFrom  == ks_MolFrom.nrec
  and KS_SELECT.cMolTo    == ks_MolTo.nrec

  and  date(0,0,0)  <<= INV_SELECT.dInv (noindex)
  and INV_SELECT.csklad == inv_podr.nrec
  and INV_SELECT.cmol   == inv_mol.nrec
  and INV_SELECT.cNote  == INV_NOTE.nRec



  and KATBOX_SELECT.cPodr  == Box_podr.NRec
  and KATBOX_SELECT.cResMC == Box_mc.NRec
  and KATBOX_SELECT.NRec   == TekBox.cBox

// для генерации штрихкодов по катсопру
  and               _cDoc == KS_Gen.nrec
  and         KS_Gen.nrec == spSopr_gen.cSopr
    and spSopr_gen.nrec   == InBoxP_gen.CSPSOPR
    and spSopr_gen.nrec   == SOPRORDB_gen.cSpSopr
// для генерации штрихкодов по инвтаб
  and       _cDoc == INV_gen.nrec
  and INV_gen.nrec == SpInvTab_gen.cInvTab


   and shk_barcodeLink.cTSD  == SHK_TSD.nrec
   and shk_barcodeLink.cARM  == SHK_ARM.nrec
   and shk_barcodeLink.cUser == SHK_USER.nrec

  and  _pTypeTSDARMUSER == SHK_Browse.type
))
//, refTable
bounds bywTable   pTable  == shk_barcodeLink.wTable (NoIndex)
bounds bytidKGal ptiDkGal == shk_barcodeLink.tiDkGal (NoIndex)
  ;
#include shk_barcode_Generate.pan

Procedure InsertMarkerBarcodeLink(_wTable, _tidkgal : word; _crec : comp; _create : boolean; _MarkerID : tpTr);
{
  if _crec = 0h then exit;
 var _cBarCode : string = _iShk_BarcodeFunc.getCode(_wTable, _tidkgal, _crec, _create);
  if _cBarCode = '' then exit;
  if getfirst shk_barcodeLink_gen where ((0 == shk_barcodeLink_gen.type and _cBarCode == shk_barcodeLink_gen.barcode)) = tsOK
   then insertMarker(_MarkerID, shk_barcodeLink_gen.nrec)
}

procedure GetbarCodesByKatSopr(  _pcDoc: comp;
                                 _create: boolean;
                                 _TpTunePrintGen: TpTunePrintGen;
                                 _markername : string
                              ); // накладные
{
 set _cDoc := _pcDoc;
 if getfirst KS_Gen <> tsOK then exit;

 var _tmpMarkerID : tptr = InitMarker( _MarkerName, 8, 100, 10 );
 clearmarker(_tmpMarkerID);

  if _TpTunePrintGen.GenDoc = 1  then InsertMarkerBarcodeLink(coKatSopr, ks_gen.vidsopr, ks_gen.nrec, _create, _tmpMarkerID);

  if _TpTunePrintGen.GenPodr = 1 then InsertMarkerBarcodeLink(coKatPodr, coTypeDocPODR, KS_Gen.cPodrTo  , _create, _tmpMarkerID);
  if _TpTunePrintGen.GenPodr = 1 then InsertMarkerBarcodeLink(coKatPodr, coTypeDocPODR, KS_Gen.cPodrFrom, _create, _tmpMarkerID);

  if _TpTunePrintGen.GenMOl = 1 then InsertMarkerBarcodeLink(coKatMol, coTypeDocMOL, KS_Gen.cMolTo, _create, _tmpMarkerID);
  if _TpTunePrintGen.GenMOL = 1 then InsertMarkerBarcodeLink(coKatMol, coTypeDocMOL, KS_Gen.cMolFrom, _create, _tmpMarkerID);

   _loop spSopr_gen
    {
     if spSopr_gen.prmc = 1
      then if _TpTunePrintGen.GenMC = 1 then InsertMarkerBarcodeLink(coKatMC, coTypeDocMC, spSopr_gen.cmcUsl, _create, _tmpMarkerID);

     if _TpTunePrintGen.GenParty = 1 then InsertMarkerBarcodeLink(coKatParty, coTypeDocPARTY, spSopr_gen.cParty, _create, _tmpMarkerID);


      _loop InBoxP_gen {
        if _TpTunePrintGen.GenkatBox = 1 then InsertMarkerBarcodeLink(coKatBox, coTypeDocBox, InBoxP_gen.CBOX, _create, _tmpMarkerID);
      }

      _loop SOPRORDB_gen {
         if _TpTunePrintGen.GenPodr = 1 then InsertMarkerBarcodeLink(coKatPodr, coTypeDocPODR, SOPRORDB_gen.CPODR, _create, _tmpMarkerID);
         if _TpTunePrintGen.GenMOL = 1 then InsertMarkerBarcodeLink(coKatMol, coTypeDocMOL, SOPRORDB_gen.cMOl, _create, _tmpMarkerID);
      }
    }

//message('GetbarCodesByKatSopr mrkCnt = '+getmarkercount(_tmpMarkerID));
 Donemarker(_tmpMarkerID, _markername);
}

procedure GetbarCodesByInvTab (  _pcDoc: comp; _create: boolean;
                                 _TpTunePrintGen: TpTunePrintGen;
                                 _markername : string
                              );// Инвентаризационная опись складского учета	615
{
 set _cDoc := _pcDoc;

 if getfirst INV_gen <> tsOK then exit;
 var _tmpMarkerID : tptr = InitMarker( _MarkerName, 8, 100, 10 );
 clearmarker(_tmpMarkerID);

  if _TpTunePrintGen.GenDoc = 1  then InsertMarkerBarcodeLink(coinvTab, 615, INV_gen.nrec, _create, _tmpMarkerID);

  if _TpTunePrintGen.GenPodr = 1 then InsertMarkerBarcodeLink(coKatPodr, coTypeDocPODR, Inv_gen.cSklad , _create, _tmpMarkerID);

  if _TpTunePrintGen.GenMOl = 1 then InsertMarkerBarcodeLink(coKatMol, coTypeDocMOL, Inv_gen.cMol, _create, _tmpMarkerID);

    _loop SpInvTab_gen {
      if _TpTunePrintGen.GenMC = 1     then InsertMarkerBarcodeLink(coKatMC, coTypeDocMC, SpInvTab_gen.cMC, _create, _tmpMarkerID);
      if _TpTunePrintGen.GenParty = 1  then InsertMarkerBarcodeLink(coKatParty, coTypeDocPARTY, SpInvTab_gen.cParty, _create, _tmpMarkerID);
      if _TpTunePrintGen.GenkatBox = 1 then InsertMarkerBarcodeLink(coKatBox, coTypeDocBox, SpInvTab_gen.cBox, _create, _tmpMarkerID);
    }
 Donemarker(_tmpMarkerID, _markername);

}


procedure GetbarCodesByDoc(  _TidkGal: word;
                             _pcDoc : comp;
                             _create: boolean;
                             _TpTunePrintGen: TpTunePrintGen;
                           _markername : string
                          );
{
  StartNewVisual(vtRotateVisual,vfBreak+vftimer,''#3'Проверка наличия и формирование штрихкодов по документу'#13#3,0) ;
//  message('GetbarCodesByDoc _TidkGal = '+_TidkGal + ' _pcDoc =' + _pcDoc);
 case _TidkGal of
     101 // Накладная на прием МЦ	101
   , 201 // Накладная на отпуск МЦ	201
   , 501 // Накладная на отпуск в производство	501
   , 600 // Накладная на внутреннее перемещение /склад-склад	600
   , 601 // Накладная на передачу МЦ в ОС	601
   , 602 : GetbarCodesByKatSopr( _pcDoc
                               , _create
                               , _TpTunePrintGen
                               , _markername);// Накладная на передачу МЦ в спецоснастку	602
     615 : GetbarCodesByInvTab ( _pcDoc
                               , _create
                               , _TpTunePrintGen
                               , _markername
                               );// Инвентаризационная опись складского учета	615
 end;
stopvisual;
}

Procedure selectObjectsFromKau(__kodKau : word);
{
   if iGetKau.GetCodeKau(cgiPickMult,__kodKau,0) > 0 // что то выбрали ...
   {
    var tmpMarkerKauName : string = iGetKau.GetMarkerName(__kodKau);
    var tmpMarkerKau     : tpTr   = InitMarker(tmpMarkerKauName, 8, 200, 10) ;

      var _tmpMarker : tpTr = InitMarker( co_MarkerName, 8, 100, 10 );
      CopyMarker(_tmpMarker, tmpMarkerKau);

      ClearMarker( tmpMarkerKau);


      DoneMarker(tmpMarkerKau,tmpMarkerKauName);


      DoneMarker( _tmpMarker, co_MarkerName);
   }
}

procedure SelectInvTabs;
{
  RunWindowModal(winINV_SELECT);
}
procedure SelectKatBoxs;
{
  RunWindowModal(winKATBOX_SELECT);
}

procedure SelectKatSoprs(__TidkGal : word);
{
  Set _vidSoprSelect := __TidkGal;
  RunWindowModal(winKS_SELECT)
}
Function ShowInvTab(_crec : comp): string; cacheable;
{
 if getfirst fastfirstrow InvTab_Show where ((_cRec == InvTab_Show.nrec)) = tsOK {
    result := InvTab_Show.nInv + ' от ' + datetostr(InvTab_Show.dInv,'DD/MM/YYYY')
  }
  else {
    result := '??? удален ' + string(_cRec,0,0)
  }
}
Function ShowKatBox(_crec : comp): string; cacheable;
{
  result := '';
 if getfirst fastfirstrow KATBOX_Show where ((_cRec == KATBOX_Show.nrec)) = tsOK {
   if getfirst fastfirstrow Katpodr_Show where ((KATBOX_Show.cPodr == Katpodr_Show.nrec)) = tsOK {
      result := ' /ПОДР:'+Katpodr_Show.kod + ', ' + Katpodr_Show.Name;
    }
    result := KATBOX_Show.kod + ', ' + KATBOX_Show.name + result;
  }
  else {
    result := '??? удален ' + string(_cRec,0,0)
  }
}

Function getMCbyParty(_crec : comp): string; cacheable;
{
 result := '';
 if getfirst fastfirstrow katParty where ((_crec == katparty.nrec)) = tsOK {
  if getfirst katmc where ((KATPARTY.CMC == katmc.nrec)) = tsOK {
     result := '('+KATMC.BARKOD + ', '+katmc.name +')'
  }
 }
}

Function getStringObjectDescription(__pTidkGal : word; _crec : comp): string; cacheable;
{
  Case __pTidkGal of
    600,101,201,
    501,602,601       : result := ShowKau(cgKau_KatSopr , _crec)
    615               : result := ShowInvTab(_cRec);
    coTypeDocBox      : result := ShowKatBox(_cRec);
    coTypeDocMC       : result := ShowKau(cgKau_KatMC   , _crec)
    coTypeDocPODR     : result := ShowKau(cgKau_KatPodr , _crec)
    coTypeDocMOL      : result := ShowKau(cgKau_KatMOL  , _crec)
    coTypeDocPARTY    : result := ShowKau(cgKau_KatParty, _crec) + getMCbyParty(_crec)
   else result := '???'
  end;
}
Function SelectObjects: string;
{
 result := '';
  Case __TidkGal of
    600,101,201,
    501,602,601       : SelectKatSoprs(__TidkGal);
    615               : SelectInvTabs;
    coTypeDocBox      : SelectKatBoxs;
    coTypeDocMC       : selectObjectsFromKau(cgKau_KatMC)
    coTypeDocPODR     : selectObjectsFromKau(cgKau_KatPodr)
    coTypeDocMOL      : selectObjectsFromKau(cgKau_KatMOL)
    coTypeDocPARTY    : selectObjectsFromKau(cgKau_KatParty)
   else message('Тип "'+__TidkGal+'" не предусмотрен к выбору'
            +''#13''+ 'Обратитесь к разработчику', error) ;
  end;
   var _tmpMarker : tpTr = InitMarker( co_MarkerName, 8, 100, 10 );

   if getmarkercount(_tmpMarker) <> 0 then result := 'Выбрано '+ String(getmarkercount(_tmpMarker));

  DoneMarker( _tmpMarker, co_MarkerName);

}



Procedure InitBounds(_wtable : word = 0; _tidkGal : word = 0);
{
  var iShk_base : Shk_base;
  iShk_base.filltTypeObj;
 // установить фильтр _filtr
 popbounds(tbbytidKGal);
 popbounds(tbbywTable);

 set  ptable  := _wtable;
 set ptidkGal := _tidkGal;

  if   ptable <> coNoFiltr_All then addbounds(tbbywTable);
  if ptiDkGal <> coNoFiltr_All then addbounds(tbbytidKGal);

   if getfirst shk_barcodeLink = tsOK then rereadrecord;

  cfsSetProp('c_BRSSHK_BARCODELINK_SHK_TSD.NAME_ТСД'          ,'Visible',(wgettune('SHK.CONNECTIONTYPE') = 1));
  cfsSetProp('c_BRSSHK_BARCODELINK_SHK_ARM.NAME_АРМ'          ,'Visible',(wgettune('SHK.CONNECTIONTYPE') = 1));
  cfsSetProp('c_BRSSHK_BARCODELINK_SHK_USER.NAME_Пользователь','Visible',(wgettune('SHK.CONNECTIONTYPE') = 1));


}


Procedure CreateBarcodes(__pwTable, __pTidkGal : word; __pMarkerName : String = co_MarkerName); // тут создание по маркеру пойдет
{
  if __pTidkGal = 0 and __pwTable = 0 then exit;

   var _tmpMarker : tpTr = InitMarker( __pMarkerName, 8, 100, 10 );

   var mrkCnt : longint = GetMarkerCount( _tmpMarker );
   var _i : longint;

   if __pwTable = 0
    then __pwTable := _iSHK_BASE.getTableCodeByViddoc(__pTidkGal);

  StartNewVisual(vtIndicatorVisual,vfBreak+vftimer,''#3'Формирование штрихкодов'#13#3,mrkCnt) ;

   For (_i := 0; _i < mrkCnt; _i++) {
     var _cRec : comp = 0h;
     if GetMarker( _tmpMarker, _i, _cRec ) then _iShk_BarcodeFunc.getCode(__pwTable, __pTidkGal, _crec, true); // это функция, но нам она как процедура нужна
     if not nextvisual then break
   }
  stopvisual;
 ClearMarker( _tmpMarker ); // зачистим на будущее
 DoneMarker( _tmpMarker, __pMarkerName);
}
Procedure AddNewBarcodes;
{
 if RunWindowModal(winAddNewBarcodes) = cmDefault {
   CreateBarcodes(__wTable, __TidkGal, co_MarkerName); // тут создание по маркеру пойдет
  }
}

handleevent
 cmInit: {
   InitBounds(coNoFiltr_All,coNoFiltr_All);
//     RunWindowModal(winshk_barcodeLink)
   closeinterface(-1);
 }
 cmdelonprotect: {
   case curfield of
   #SHK_TSD.name  : shk_barcodeLink.cTSD  := 0h;
   #SHK_ARM.name  : shk_barcodeLink.cARM  := 0h;
   #SHK_USER.name : shk_barcodeLink.cUser := 0h;
  end;
  update current shk_barcodeLink;
  rereadrecord;
 }

end;
end.

mnu_shk_barcode_Generate Menu {
- 'Печать штрихкодов',cmPrintDoc,'Печать штрихкодов по текущей записи или по группе записей',hcctxSoprPrintDoc,'Ctrl-P',kbCtrlP,sci1Esc;
- 'Настройка шаблонов печати',cmValue1,'Настройка шаблонов печати',hcctxSoprPrintDoc,'',,sci1Esc;
- 'Просмотр исходного объекта',cmValue2,'Просмотр исходного объекта',hcctxSoprPrintDoc,'',,sci1Esc;
}
