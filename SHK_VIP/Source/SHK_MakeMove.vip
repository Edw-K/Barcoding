/*************************************************************************************************\
*  Наименование:  MakeMove для SHK
*  Контур/Модуль: SHK
*  Примечание:
*  Вид работы  |Номер           |Дата    |Исполнитель              |Проект
* -----------------------------------------------------------------------------------------------
\*************************************************************************************************/
// по мотивам функции для ESB, сделанной на проекте ЭМ.
// выделена функция ДЛЯ SHK. Любой запрос у пользователя, например "Message",  вешает
#include SHK_MakeMove.vih
#include iz_const.vpp
#include GetSvOst_SpDocObj.inc
#include GetSvOst_SpDocObj.vih
#include Debug_Mnf_Obj.vih
#include MakeMove.vih
#include SklOrder.vih
#include Sklad.vih
#include TekRun1.vih
#include SHmanager.vih
#include MakeOrder.vih
#include oDei.vih
#include ClndrDog.vih
#include ChckLim.vih
#include LimSopr.vih
#include SerialMove.vih
#include SerialMultipleChoice.vih
#include MnfDskFuncs.vih
#include SopInMov.vih
#include DocRefFunction.vih   // Процедуры и функции для таблицы DocRef
#include vmMnfCheck.mem
#include BranchSemaphores.vih
#include autoplan.vih
#include MakeOrder.vih
#include modifOrd.vih
#include BoxFuncsFunctions.vih
#include MakeOrdAktPer.vih
//component "C_BARCODE"

Interface SHK_MakeMove;

var oMakeOrdAktPer: MakeOrdAktPer;
var _logSHK_OUT : string= '';
var pBoxFuncs1   : BoxFuncs;
//include MakeOrder.var
//include modifOrd.var

Create view vSpOrder
var _cSpOrder: comp;
as select
  SpOrder.*, KatSopr.Nrec
from SpOrder , KatSopr
where (( _cSpOrder == SpOrder.nRec));
// Вызов AnySpOrder_Update по SpOrder.nRec
Public Function AnySpOrderUpdateSHK(pSpOrder, pNewParty: comp): boolean;
{
  vSpOrder._cSpOrder := pSpOrder;

  Result := false;
  if vSpOrder.getfirst SpOrder = tsOK
  {
    vSpOrder.SpOrder.cParty := pNewParty;
    Result := (oModifOrds.AnySpOrder_Update(TypeSpOrder(vSpOrder.SpOrder.buffer)) = tsOk);
  }

}

Function GenerateNewOutFile: string;
{
 _logSHK_OUT := GetStringParameter('Files','OutputFilesDirectory',0)+ '\SHK_LOG_MAKE_MOVE_'+DateToStr(cur_date,'YYYYMMDD')+'_'+timetostr(cur_time,'HHMMSS')+'.log';
 result := _logSHK_OUT;
}

function GetLogFile : string;
{
  if _logSHK_OUT = '' then _logSHK_OUT := GenerateNewOutFile;
  result := _logSHK_OUT;
}

Procedure MyLog(_str: string);
{
   //exit;// debug
  LogStrToFile(GetLogFile,DateToStr(cur_date,'YYYYMMDD')+'_'+timetostr(cur_time,'HHMMSS') + ': ' + shortstrtowin(_str));
}

// Это копия ShowNalMKRMsg с заменой Message на MyLog источник: \L\L_Sklad\vip\Func\MakeOrder\MkrFun3.vpp
Function ShowNalMKRMsg2Log(ResTov: word): boolean;
var
  McTov: boolean;
  sMCLess, sMCLessObj, sMCLessObj1, sVOstLess, sOstLesObj, sAbortRash, sWarnRash, sNoObj : string;
  wSpisanie, wSpisObj: word;
{
  sMCLess     := 'Матценностей недостаточно в требуемом разрезе.';
  sMCLessObj  := 'Матценностей недостаточно в требуемом разрезе целевого назначения.';
  sMCLessObj1 := 'Матценностей недостаточно в свободном остатке (не закрепленных за объектами ЦУ).';
  sVOstLess   := 'Недостаточно свободного текущего остатка матценностей.';
  sOstLesObj  := 'Недостаточно свободного текущего остатка матценностей с учетом'#13
               + 'наличия на разрезах целевого назначения.';
  sNoObj      := 'Запрещено списание без указания объекта целевого назначения';
  sAbortRash  := 'Вам запрещено отпускать МЦ в таких случаях.';
  sWarnRash   := 'Продолжить отпуск матценностей?';

  wSpisanie := wGetTune('McUsl.Spisanie');

  if (ResTov <= 1000)
    wSpisObj := wGetTune('UKS.Spisanie')
  else
    {
      wSpisObj := (ResTov div 1000) - 1;
      ResTov := ResTov mod 1000;
    }

  if ((ResTov AND 32) <> 0)
    {
      MyLog(sNoObj);
      ShowNalMKRMsg2Log:= false;
      Exit;
    }

  McTov := FALSE;
  if ((ResTov AND 1) <> 0) AND (wSpisanie <> 1) AND (wSpisanie <> 3)
   // запрещать без наличия
    MyLog(sMCLess + ''#13#13 + sAbortRash) // , Warning)
  else
    if ((ResTov AND 2) <> 0) AND (wSpisanie = 2)
     // запрещать без текущего остатка (только если запрещено и без наличия)
      MyLog(sVOstLess + ''#13#13 + sAbortRash) // , Warning)
    else
      if ((ResTov AND 8) <> 0) AND ((wSpisObj = 1) OR (wSpisObj = 5))
       // запрещать без наличия по объекту
        MyLog(sMCLessObj + ''#13#13 + sAbortRash) // , Warning)
      else
        if ((ResTov AND 16) <> 0) AND ((wSpisObj = 1) OR (wSpisObj = 5))
        // запрещать без свободного текущего остатка
          MyLog(sOstLesObj + ''#13#13 + sAbortRash) // , Warning)
        else
          if ((ResTov AND 64) <> 0) AND ((wSpisObj = 1) OR (wSpisObj = 5))
          // запрещать без наличия по объекту без указания объекта ЦУ
            MyLog(sMCLessObj1 + ''#13#13 + sAbortRash) // , Warning)
          else
          {
            McTov := TRUE;

            if ((ResTov AND 1) <> 0) AND (wSpisanie <> 3) // разрешать без наличия
              MyLog(sMCLess + ''#13#13 + sWarnRash);//, Confirmation + YesNo) = cmYes;

            if McTov AND ((ResTov AND 2) <> 0)   // разрешать без текущего остатка
              MyLog(sVOstLess + ''#13#13 + sWarnRash);//, Confirmation + YesNo) = cmYes;

            if McTov AND ((ResTov AND 8) <> 0)   // разрешать без наличия по объекту
              MyLog(sMCLessObj + ''#13#13 + sWarnRash);//, Confirmation + YesNo) = cmYes;

            if McTov AND ((ResTov AND 16) <> 0)  // разрешать без свободного текущего остатка
              MyLog(sOstLesObj + ''#13#13 + sWarnRash);//, Confirmation + YesNo) = cmYes;
          }

  ShowNalMKRMsg2Log := McTov;
} // Function ShowNalMKRMsg2Log(ResTov: word): boolean;
      
Public Function MakeMoveForSHK(cKatSopr : comp; wDefine, SkPr, wDel, wDate, wTXO, wMode, wParam, wOrder : word; w_dOpr : date; var _error : string) : boolean;
{ #__UNUSED__(cKatSopr, wDefine, SkPr, wDel, wDate, wTXO, wMode, wParam, wOrder, w_dOpr)
  var dForm, DatOpr: Date; // Дата формирования ордера
  var erfl, prmod, Stopped, wasRashOrd: boolean; // Флаг корректности и модификации тек. остатков
  var stRn, stVn, nal, procN, koefp: double;
  var cTMP1, SPrih, Srash, pd, ml, pr: comp;
  var nomPrih, nomRash: string[20];
  var counts, iKolRasx, iKolPrih: integer;
  var reservOk, MTov: boolean;
  var ResTov, ret, wTipOrd, wOtkuda, wKuda: word;
  var RealSum, RealSumV: double;
  var make_rash, make_prih, first_nakl, boCheckPodr: boolean;
  erfl:=false;
  stRn:=0;
  cTMP1:=0;
  SPrih:=0;
  nomPrih:='';
  counts:=0;

  MakeMoveForSHK := FALSE;
  iKolRasx := iKolPrih := 0;

  if GetFirst KatSopr where ((cKatSopr == KatSopr.NRec)) <> tsOk
  {
    if (wDel = 0)
      MyLog('Накладная не найдена по cKatSopr='+ String(cKatSopr,0,0) );

    Exit;
  }
  MyLog('MakeMove->MakeMove 001');

  var fName: string = 'Opr632_' +String(cKatSopr)+ '_' + _DateTimeToStr(_CurDateTime,'YYYYMMDD_HH_NN_SS_SSS') + '.log' ;
  MyLog('MakeMove->MakeMove VidSopr = '+string(KatSopr.VidSopr)+'  cKatSopr='+ String(cKatSopr,0,0) + ' fName=' + fName  );
  frm1wed.SetFileName(fName);

  // Блок для KatSopr.VidSopr = 632, 630
  if KatSopr.VidSopr = 632 or KatSopr.VidSopr = 630
  {

    result := oMakeOrdAktPer.MakeOrderAktPer(cKatSopr, true, frm1wed.Handle, true, true);

    frm1wed.Write('oMakeOrdAktPer.MakeOrderAktPer(' + String(katsopr.nRec) + ', true, frm1wed.Handle, true, true) result = ' + string(result) );
    
    frm1wed.Write(frm1wed.GetFileName);
    frm1wed.Write(katsopr.nSopr + ' от ' + DateToStr(katsopr.Dsopr,'DD.MM.YYYY')  +  ' katsopr.nRec=' + String(katsopr.nRec) + '=' + String(katsopr.nRec,0,0));
    frm1wed.abortForm;
    exit;
  }

  if (NOT IsValid(#SpSopr))
  {
    MyLog('Не заполнена спецификация документа!');//, CancelButton);
    Exit;
  }
  MyLog('MakeMove->MakeMove 002');

  if (NOT UpdateTable)
    Exit;
  MyLog('MakeMove->MakeMove 003');

  if ((KatSopr.cPodrFrom = KatSopr.cPodrTo) AND
      (KatSopr.cMolFrom  = KatSopr.cMolTo ) AND
      (KatSopr.VidSopr = 600 OR KatSopr.VidSopr = 607) )   //RM_
  {
    MyLog('Разрез внутреннего перемещения "откуда" совпадает с разрезом "куда"!'); // , Warning);
    Exit;
  }
 MyLog('MakeMove->MakeMove 004');

  if KatSopr.vidSopr = 600 OR KatSopr.vidSopr = 606 OR KatSopr.vidSopr = 607 OR KatSopr.vidSopr = 503
    if KatSopr.cMOLTo = 0 AND boGetTune('Oper.NeedMOL')
    {
      MyLog('Установлена настройка Складской учет - При оприходовании обязательно указывать МОЛ. '+
              'Выберите МОЛ для оприходования.');
      Exit;
    }
  MyLog('MakeMove->MakeMove 005');

  if (KatSopr.vidSopr = 600 OR KatSopr.vidSopr = 601 OR KatSopr.vidSopr = 602 OR KatSopr.vidSopr = 605 OR KatSopr.vidSopr = 606 OR KatSopr.vidSopr = 607)
    case wGetTune('Sklad.MakeOrder') of
      1: {
        if (KatSopr.Status <> 1)// не исполняемый
        {
          //ShowTune('Формирование ордеров по накладным/актам складского учета разрешено только в статусе "исполняемый"', 'Sklad.MakeOrder');

          _error := 'Формирование ордеров по накладным/актам складского учета разрешено только в статусе "исполняемый" (Sklad.MakeOrder)';
          mylog(_error);
          Exit;
        }
      }

      2: {
        //ShowTune('Формирование ордеров по накладным/актам складского учета запрещено настройкой', 'Sklad.MakeOrder');
        _error := 'Формирование ордеров по накладным/актам складского учета запрещено настройкой (Sklad.MakeOrder)'     ;
        mylog(_error);
        Exit;
      }
    end;
  MyLog('MakeMove->MakeMove 006');

  if (not oModifOrds.CheckBlockPodrInventar(KatSopr.nRec, 0, 0, False, False, True))
    Exit;
  MyLog('MakeMove->MakeMove 007');

  if boGetTune('Sklad.BlockModOrd')
  {
    var sMode_: byte;
    if BS.IsBranchSemaphoreSet(GetCurrentBranch, 'RecalcSp', sMode_)
    {
      MyLog('В данный момент происходит пересчет цен в расходных ордерах пользователем: '#13 +
                oModifOrds.CurDescrRead(600, GetCurrentBranch, 'RecalcSp'));
      Exit;
    }

    if BS.IsBranchSemaphoreSet(GetCurrentBranch, 'CountSaldo', sMode_)
    {
      var boCountSaldo : boolean;
      boCountSaldo := True;

      if RecordExists PickRep where (('CountSaldo' == PickRep.OwnName and
                                      500          == PickRep.wList )) = tsOK
      {
        boCountSaldo := False;
        _loop SpSoprCh where ((KatSopr.nRec == SpSoprCh.cSopr))
          if GetFirst PickRep where (('CountSaldo'    == PickRep.OwnName and
                                      500             == PickRep.wList   and
                                      SpSoprCh.cMCUsl == PickRep.cRec)) = tsOk
          {
            boCountSaldo := True;
            Break;
          }
      }

      if (boCountSaldo)
      {
        MyLog('В данный момент происходит пересчет сальдовых/текущих остатков пользователем: '#13 +
                     oModifOrds.CurDescrRead(601, GetCurrentBranch, 'CountSaldo'));
        Exit;
      }
    }
  }
  MyLog('MakeMove->MakeMove 008');

  make_prih := TRUE;
  make_rash := TRUE;

  case wOrder of
    0: {
      make_rash:= false;
      make_prih:= false;
    }
    1: {
      make_rash:= true;
      make_prih:= false;
    }
    2: {
      make_rash:= false;
      make_prih:= true;
    }
    3: {
      make_rash:= true;
      make_prih:= true;
    }
  end;

  if ((wDefine and 16) <> 16)
  {
    if (boGetTune('Oper.MakeMove') AND (KatSopr.vidSopr = 600 OR KatSopr.vidSopr = 607)) OR //u1
       (boGetTune('UKS.MakeMove') AND (KatSopr.VidSopr = 229 OR KatSopr.VidSopr = 210))
      if oMSview.GetMethodSpisPodr(KatSopr.cPodrFrom)<>3 AND oMSview.GetMethodSpisPodr(KatSopr.cPodrTo)<>3 //не LF_
      {
        if ((wDefine and 1) = 1) or ((wDefine and 2) = 2)
          first_nakl := TRUE;
        else
        {
          if NOT ReadMyDsk(first_nakl, 'first_nakl', FALSE)
            first_nakl := TRUE;

          if NOT ReadMyDsk(make_move, 'make_move'+string(KatSopr.vidSopr), FALSE)
            first_nakl := TRUE;
        }

        if first_nakl
          if RunWindowModal(wMake_Move) = cmCancel //в ней есть SaveMyDsk(make_move, 'make_move')
            Exit;

        make_rash := ((make_move AND 1) = 1); //формировать расх.
        make_prih := ((make_move AND 2) = 2); //формировать прих.
        //u1 - del
        if NOT (make_rash OR make_prih) Exit;  // не надо ни расходы ни приходы

        SaveMyDsk(FALSE, 'first_nakl');
      }
  }
  MyLog('MakeMove->MakeMove 009');

  var StrTune : string; // проверка, можно ли удалить ранее сформированные ордера по настройкам
  StrTune := 'Удаление ордеров запрещено настройкой.';
  case (wGetTune('Sklad.Akt_Move.IsDelOrder')) of
   1:
   {
     if ((make_prih) and
        (GetFirst SklOrder where ((KatSopr.nRec == SklOrder.cSopr and
                                   0            == SklOrder.VidOrder )) = tsOk)) or
        ((make_rash) and
        (GetFirst SklOrder where ((KatSopr.nRec == SklOrder.cSopr and
                                   1            == SklOrder.VidOrder )) = tsOk))
       {
         //ShowTune(StrTune + ':', 'Sklad.Akt_Move.IsDelOrder');
         _error := StrTune + ': Sklad.Akt_Move.IsDelOrder'    ;
         mylog(_error);
         Exit;
       }

   }
   2:
   {
     if ((make_prih) and
        (GetFirst SklOrder where ((KatSopr.nRec == SklOrder.cSopr and
                                   0            == SklOrder.VidOrder )) = tsOk)) or
        ((make_rash) and
        (GetFirst SklOrder where ((KatSopr.nRec == SklOrder.cSopr and
                                   1            == SklOrder.VidOrder )) = tsOk))
     {
       case wGetTune('Doc.Visible') of
         dcOwnOnly, dcGrpRead, dcOwnModifAllRead:
         {
           if (SklOrder.Descr <> sGetTune('User.Descr'))
           {
             //ShowTune('Ордер создан под дескриптором (' + SklOrder.Descr + ').' +
             //         ' Удаление запрещено!', 'Sklad.Akt_Move.IsDelOrder');
            _error := 'Ордер создан под дескриптором (' + SklOrder.Descr + ').' +
                      ' Удаление запрещено! (Sklad.Akt_Move.IsDelOrder)';
             mylog(_error);
             Exit;
           }
         }

         dcGrpModif, dcGrpModifAllRead:
         {
           if (SklOrder.DesGr <> sGetTune('User.DesGr'))
           {
             //ShowTune('Ордер создан под группой дескр. (' + SklOrder.DesGr + ').' +
             //         ' Удаление запрещено!', 'Sklad.Akt_Move.IsDelOrder');
             _error := 'Ордер создан под группой дескр. (' + SklOrder.DesGr + ').' +
                      ' Удаление запрещено! (Sklad.Akt_Move.IsDelOrder)';
             mylog(_error);
             Exit;
           }
         }
       end;
     }
   }
  end;

  prmod := TRUE;
  var wasErr_LF : boolean;
  wasErr_LF := FALSE; //LF_
  MyLog('MakeMove->MakeMove 010');

  case KatSopr.VidSopr of
  //---------------------
    501..508: // для производственных накладных есть настройка
      {
        if(wGetTune('Manuf.ZeroCtrl') = 0)
        {
          if (not CheckNullPos)
            Exit;
        }
        else
          if(KolNullPos = 0FFFFH)
          {
            MyLog('В спецификации документа № ' + KatSopr.NSopr + ' все позиции с нулевым количеством.');
            Exit;
          }
      }
  //---------------------
    else
      if ((wDefine and 16) <> 16)
        if (NOT CheckNullPos)
          Exit;
//#end
  //---------------------
  end;

  MyLog('MakeMove->MakeMove 011');

  // Проверка возможности проведения внутреннего перемещения и выдача протокола
  if (GetFirst SpSopr <> tsOk)
  {
    MyLog('Документ не оформлен...');// , CancelButton);
    Exit;
  }
  MyLog('MakeMove->MakeMove 012');

  if ((KatSopr.VidSopr < 502) OR (KatSopr.VidSopr > 506)) AND
     ((KatSopr.VidSopr <> 551) OR (KatSopr.VidSopr <> 552))
    if ((coGetTune('User.cCurSklad') <> KatSopr.cPodrFrom) AND
        (KatSopr.cPodrFrom <> 0) AND (coGetTune('User.cCurSklad') <> 0) and (make_rash) )
    {
      MyLog('Нельзя отпускать с этого склада, т.к. в настройке установлен текущий склад');// , CancelButton);
      Exit;
    }

  if make_prih AND (KatSopr.cPodrTo = 0) AND (KatSopr.VidSopr <> 504)
    if (KatSopr.VidSopr = 502) OR (KatSopr.VidSopr = 506)
    {
      MyLog('Не указано подразделение, куда необходимо переместить МЦ...');// , CancelButton);
      Exit;
    }
    else
    {
      MyLog('Не указан склад, куда необходимо переместить МЦ...');// , CancelButton);
      Exit;
    }
  MyLog('MakeMove->MakeMove 013');

  if make_rash AND (KatSopr.cPodrFrom = 0)
    if ( (KatSopr.VidSopr >= 502) AND (KatSopr.VidSopr <= 506) )
    {
      MyLog('Не указано подразделение, откуда необходимо переместить МЦ...');// , CancelButton);
      Exit;
    }
    else
    {
      MyLog('Не указан склад, откуда необходимо переместить МЦ...');// , CancelButton);
      Exit;
    }
  MyLog('MakeMove->MakeMove 014');

  // для методики списания по фактическому приходу
  if ( NOT CheckKatSoprMS(TRUE) ) // проверка привязанных приходов
    Exit;
  MyLog('MakeMove->MakeMove 015');
  // -----------------------------------------------
  var boDiskret, boMinusKol, boArchivMC, boKrat : boolean;
  boDiskret := boMinusKol := boArchivMC := boKrat := False;

  if (wGetTune('Sklad.DiskretKol') = 1) or (wGetTune('Sklad.AllowMinusKol') = 0) or (not boGettune('Sklad.ArchivMC'))// запрет проведения ордеров при нарушении дискретности по ордеру
    _LOOP SpSopr where ((KatSopr.NRec == SpSopr.cSopr AND
                         1            == SpSopr.prMC))
                         ordered by index SpSopr08
    {
      if (not boGettune('Sklad.ArchivMC'))
        if GetFirst KatMC Where (( SpSopr.cMCUsl == KatMC.nRec )) = tsOK
          if (KatMC.IsArch = 1)
          {
            if (not boArchivMC)
              frm1wed.Write('Установлена настройка: "Настройки Галактики \ Логистика \ Складской учет \ Разрешать создание ордеров по архивных МЦ - нет"');

            frm1wed.Write('МЦ "' + KatMC.Name + '" находится в архиве ');
            boArchivMC := True;
          }

      var _KolOrd : double;
      _KolOrd := SpSopr.KolFact*fEdIzm.GetKoefOtpEdT(SpSopr.NRec, SpSopr.cOtpEd, coSpSopr);
      if (GetFirst KatMC where ((SpSopr.cMCUsl == KatMC.NRec)) = tsOk)
        if (GetFirst KatEd where ((KatMC.cEd == KatEd.NRec)) = tsOk)
        {
          if (KatEd.Diskret = 1)
            if (not fEdIzm.IsKolDiskret(_KolOrd))
            {
              if (wGetTune('Sklad.DiskretKol') = 1)
              {
                if (not boDiskret)
                  frm1wed.Write('Установлена настройка: "Настройки Галактики \ Логистика \ Складской учет \ Контролировать дискретность и кратность количества при формировании ордеров - запрещать формирование"');

                frm1wed.Write('По МЦ "' + KatMC.Name + '" нельзя сформировать: ' +DoubleToStr(_KolOrd, '[|-]366666666666.8889999999') +' '+  KatEd.Name +', учетная единица является неделимой.');
                boDiskret := True;
              }
            }

          if (wGetTune('Sklad.DiskretKol') = 1)
          {
            if (not fEdIzm.IsKolMultiplicity(_KolOrd, fEdIzm.GetKatEdMultiplicityByMC(KatMC.nRec, KatMC.cEd)))
            {
              if (not boKrat)
                frm1wed.Write('Установлена настройка: "Настройки Галактики \ Логистика \ Складской учет \ Контролировать дискретность и кратность количества при формировании ордеров - запрещать формирование"');

              frm1wed.Write('По МЦ "' + KatMC.Name + '" нельзя сформировать: ' +DoubleToStr(_KolOrd, '[|-]366666666666.8889999999') +' '+ KatEd.Name +' (должно быть кратно ' + string(10**fEdIzm.GetKatEdMultiplicityByMC(KatMC.nRec, KatMC.cEd)) + ')');
              boKrat := True;
            }
          }
        }

      if (wGetTune('Sklad.AllowMinusKol') = 0) and (_KolOrd < 0) and ((KatSopr.waDoc <> adSoprDocSNSell) and (KatSopr.waDoc <> adSoprDocSN) and (KatSopr.waDoc <> adSoprDocKDO))
      {
        if (not boMinusKol)
          frm1wed.Write('Установлена настройка: "Настройки Галактики \ Логистика \ Складской учет \ Разрешать ввод отрицательного количества в ордерах - нет"');

        frm1wed.Write('По МЦ "' + KatMC.Name + '" нельзя списать: ' +DoubleToStr(_KolOrd, '[|-]366666666666.8889999999'));
        boMinusKol := True;
      }
    }

  if (boDiskret) or (boMinusKol) or (boArchivMC) or (boKrat)
  {
    frm1wed.Write(katsopr.nSopr + ' от ' + DateToStr(katsopr.Dsopr,'DD.MM.YYYY')  +  ' katsopr.nRec=' + String(katsopr.nRec) + '=' + String(katsopr.nRec,0,0));
    frm1wed.AbortForm;
    Exit;
  }

  MyLog('MakeMove->MakeMove 016');

  // ----------------------------------------------------------------
  dForm := if (KatSopr.dOpr = ZeroDate, KatSopr.dSopr, KatSopr.dOpr);
//  if (wGetTune('Oper.Akt_Move.Date') = 1)    dForm := Cur_Date;

  if ((wDefine and 4) = 4)
    dForm := w_dOpr;     // по установленной дате

// wTipOrd  2-производство; 3-внутр.перемещ  значение для TipOrder
// wOtkuda  0-склад 1-производство  значение для SP
// wKuda    0-склад 1-производство  значение для SP
// make_prih = TRUE формировать приходный

  wOtkuda := oMakeOrder.GetVidUchSopr(KatSopr.NRec, KatSopr.VidSopr, cgVidOrder_Discharge);
  wKuda   := oMakeOrder.GetVidUchSopr(KatSopr.NRec, KatSopr.VidSopr, cgVidOrder_Receipt);

  SkPr := wOtkuda;



  case KatSopr.VidSopr of
  //---------------------
    229, 210:
      {
        wTipOrd := 1;
      }
  //---------------------
    501:
      {
        wTipOrd := 2;
        if ((wDefine and 128) = 128)
          if ( (KatSopr.cNazna <> comp(0)) AND (KatNazna.VidNazn >= 1) )
             make_prih := FALSE;
      }
  //---------------------
    503:
      {
        wTipOrd := 2;
        if ( (KatSopr.cNazna <> comp(0)) AND (KatNazna.VidNazn >= 1) )
          make_rash := FALSE;
      }
  //---------------------
    504:
      {
        wTipOrd := 2;
        make_prih := FALSE;
      } //wKuda не формируется TRUE FALSE
  //---------------------
    506:
      {
        wTipOrd := 2;
        if ((wDefine and 128) = 128)
          if ( (KatSopr.cNazna <> comp(0)) AND (KatNazna.VidNazn >= 1) )
            make_prih := FALSE;
      }
  //---------------------
    551, 552:  //RM_
      {
        wTipOrd := 1;
      }
  //---------------------
    607:  //RM_
      {
        wTipOrd := 3;
      }
    502:  //Лапушков. Правим косяк
      {
        wTipOrd := 2;
      }
    505:  //Лапушков. Правим косяк
      {
        wTipOrd := 2;
        SkPr  := 1;
        wKuda := 1;
        wOtkuda := 1;
      }

    else
      {
        wTipOrd := 3;
      }  // TRUE
  //---------------------
  end;
  MyLog('MakeMove->MakeMove 018 '+string(wDefine));

  if ((wDefine and 16) <> 16)
  {

  case wdate of
   0: dForm := w_dOpr;   // по установленой дате
   1: dForm := KatSopr.dSopr;   // по дате накладной
   else if w_dOpr <> Date (0,0,0) dForm := w_dOpr else dForm := KatSopr.dSopr; // никаких запросов  if (RunDialog(GetFormNa, dForm) = cmCancel)  // по запросу
  end;

  MyLog('MakeMove->MakeMove 019');
  if (wGetTune('Sklad.OrderFuture') = 0)
    if (dForm > Cur_Date)
    {

      _error := 'Нельзя создать складской ордер c датой больше текущей! Настойка Sklad.OrderFuture =' + sGetTune('Sklad.OrderFuture') ;
      mylog(_error);
//      ShowTune('Нельзя создать складской ордер c датой больше текущей!', 'Sklad.OrderFuture');
      Exit;
    }

  if (not oMakeOrder.CheckPodrArchiv (KatSopr.cPodrFrom, dForm))
    Exit;

  if (not oMakeOrder.CheckPodrArchiv (KatSopr.cPodrTo, dForm))
    Exit;
  MyLog('MakeMove->MakeMove 020');

  if (wGetTune('Oper.ModifyInClosePeriod') > 0)
  {
    if (wGetTune('Oper.ModifyInClosePeriod') = 2)
    {
      if (to_Days(dForm) <= to_Days(dGetTune('Oper.DateClosePeriod')))
      {
        MyLog('Изменение на дату в закрытом периоде запрещено.');// , Information);
        exit;
      }
    }
    else
    {
      if (to_Days(dForm) <= to_Days(dGetTune('Oper.DateClosePeriod')))
      {
       /*
        if (MyLog('Изменить на дату в закрытом отчетном периоде?', yesNo+Confirmation) <> cmYes)
        {
          exit;
        }
        else
       */
        {
          MyLog('Измененено на дату dForm в закрытом периоде.' + DateToStr(dForm,'DD/MM/YYYY') );// , Information);
          KatSopr.dSopr := dForm;
        }
      }
    }
  }

  ChReBuildOrd(KatSopr.nRec, KatSopr.cPodrFrom, KatSopr.cMOLFrom, False, make_rash, True, False);
  ChReBuildOrd(KatSopr.nRec, KatSopr.cPodrTo, KatSopr.cMOLTo, make_prih, False, False, False);
  MyLog('MakeMove->MakeMove 021');

  // проверка даты годности партий
  var boPartyGodn : boolean = false;
  if make_rash
  {
    case KatSopr.VidSopr of
    //---------------------
      501..508: // для производственных накладных есть настройка
      {
        if (ExistTune('Manuf.PartyGodnSpisPermission'))
          if (wGetTune('Manuf.PartyGodnSpisPermission') = 0)
          {
            _LOOP SpSopr where ((KatSopr.NRec == SpSopr.cSopr AND
                                 1            == SpSopr.prMC))
                                 ordered by index SpSopr08
            {
              if (isValid(#KatParty))
                if (KatParty.dGodn < dForm)
                {
                  if (not boPartyGodn)
                    frm1wed.Write('Установлена настройка: ' + GetTuneName('Manuf.PartyGodnSpisPermission') + ' - нет.');

                  frm1wed.Write('У партии "' + KatParty.Name + '" срок годности истекает ' + _DateTimeToStr(KatParty.GodenDateTime, 'DD/MM/YY HH:NN:SS') + '.');
                  boPartyGodn := true;
                };


            }

            if (boPartyGodn)
            {
              frm1wed.Write(katsopr.nSopr + ' от ' + DateToStr(katsopr.Dsopr,'DD.MM.YYYY')  +  ' katsopr.nRec=' + String(katsopr.nRec) + '=' + String(katsopr.nRec,0,0));
              frm1wed.AbortForm;
              Exit;
            };

          }
      }
    end;
  };

  MyLog('MakeMove->MakeMove 022');
  var wResult1 : word;
  wResult1 := 0;

  if (  (KatSopr.VidSopr = 501)
     or (KatSopr.VidSopr = 503)
     or (KatSopr.VidSopr = 504)
     or (KatSopr.VidSopr = 506)
     )
    if (coGetTune('Manuf.Nakl'+String(KatSopr.VidSopr)+'.Alg1AftDate'+String(KatSopr.VidSopr)) <> 0)
    {
      wResult1 := RunInterface( 'M_MNPLAN::SimpleWayToRunAlgorithm'
                              , coGetTune('Manuf.Nakl'+String(KatSopr.VidSopr)+'.Alg1AftDate'+String(KatSopr.VidSopr))
                              , word(2000+KatSopr.VidSopr)
                              , KatSopr.NRec
                              , comp(0));
    }
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

  if (wResult1 = cmNo) or (wResult1 = cmDefault)
    {
      MyLog(''#3+'По результатам выполнения алгоритма'+''#13+
              ''#3+'формирование ордеров запрещено');//,Information);
      Exit;
    }
  MyLog('MakeMove->MakeMove 023');

  // проверка параметра запрет редактирования задним числом
  if oModifOrds.IsOstOnMSPrPer(False, SkPr, KatSopr.nRec, comp(0), dForm)
  {
    //ShowTune('В настройке установлен запрет модификации ордеров в закрытом периоде!',
    //         if (SkPr = cgVidUchO_UKS, 'UKS.Doc.ModOrder',
    //          if (SkPr = cgVidUchO_UPL, 'Manuf.ModOrder',
    //             'McUsl.ModOrder'
    //        )));

    _error := 'В настройке установлен запрет модификации ордеров в закрытом периоде!' +
             if (SkPr = cgVidUchO_UKS, 'UKS.Doc.ModOrder',
              if (SkPr = cgVidUchO_UPL, 'Manuf.ModOrder',
                 'McUsl.ModOrder'));
    mylog(_error);
    Exit;
  }
  MyLog('MakeMove->MakeMove 024');

  // Проверка возможности повторного формирования складских ордеров по текущему дню.
  if (wGetTune('Oper.RepeatOrderForSopr') <> 0)
    if (GetFirst SklOrder where ((KatSopr.NRec == SklOrder.cSopr)) = tsOk)
      if (GetFirst SklOrder
        where (( SkPr   == SklOrder.SP AND
                 word(1) == SklOrder.VidOrder AND
                 dForm == SklOrder.dOrd AND
                 KatSopr.cPodrTo == SklOrder.cPodr
                 AND (KatSopr.cMolTo = SklOrder.cMol) )) = tsOk)
        {
          MyLog('В разрезе поступления на данную дату уже есть списания МЦ.'#13+
                  'В настройке запрещено повторное формирование '+
                  'складских ордеров по накладным на внутреннее перемещение, '+
                  'если на дату формирования ордеров уже есть списания МЦ');// , information);
          Exit;
        }

  MyLog('MakeMove->MakeMove 025');
  if ( KatSopr.VidSopr = cgDoc_0551
    or KatSopr.VidSopr = cgDoc_0552
    or KatSopr.VidSopr = cgDoc_0210   // Акт передачи оборудования в монтаж
    or KatSopr.VidSopr = cgDoc_0229 ) // Акт передачи материалов на строительство
  {
    if boGetTune('Sklad.SoprDoc.AutoMakeAkt')
      // "При нажатии кнопки [Отмена] операция прерывается, при закрытии интерфейса - нет"
      if ( RunInterface('L_SKLAD::iCheckOst', KatSopr.nRec, dForm) = cmNo )
        Exit;
  }
  MyLog('MakeMove->MakeMove 026');

  if make_prih AND (KatSopr.VidSopr <> 504)
    if (oModifOrds.Check_wasSpisOrder(0, 0, 0, 0, KatSopr.nRec, SkPr, dForm, 0))
      Exit;

  MyLog('MakeMove->MakeMove 027');
  if( NOT oModifOrds.SetSemaphoreSklad('KatSopr_MakeMove', KatSopr.NRec) )
    Exit;

  MyLog('MakeMove->MakeMove 028');
  //------------------------------------------------------------------------------
  #include DEIskl_f.vpp  //пересчет по ДЕИ если используются ДЕИ в складском учете (в Sklad/Doc)
  //------------------------------------------------------------------------------

  UpDateTable;

  if ((wDefine and 32) <> 32)
  {
    if (not oMakeOrder.DeleteOrders(KatSopr.NRec, True, make_prih, make_rash, wMode, wParam))
    {
      oModifOrds.ClearSemaphoreSklad('KatSopr_MakeMove', KatSopr.NRec);
      Exit;
    }
  }
  else
  {
    if (KatSopr.VidSopr = 501)
    {
      if (not oMakeOrder.DeleteOrders(KatSopr.NRec, False, make_prih, make_rash, wMode, wParam))
      {
        oModifOrds.ClearSemaphoreSklad('KatSopr_MakeMove', KatSopr.NRec);
        Exit; // удаляем ордера без всяких запросов
      }
    }
    else
    {
      if (not oMakeOrder.DeleteOrders(KatSopr.NRec, (wDel = 0), make_prih, make_rash, wMode, wParam))
      {
        oModifOrds.ClearSemaphoreSklad('KatSopr_MakeMove', KatSopr.NRec);
        Exit;
      }
    }
  }
  MyLog('MakeMove->MakeMove 029');

  ReReadRecord(#KatSopr);


  if (NOT InitMCInfo(dForm))
  {
    oModifOrds.ClearSemaphoreSklad('KatSopr_MakeMove', KatSopr.NRec);
    Exit;
  }
} //  if ((wDefine and 16) <> 16)

  MyLog('MakeMove->MakeMove 030');

  boCheckPodr := False;
  if (oMSview.GetTuneMSForPodr(KatSopr.cPodrFrom) = 1) AND oMSview.CheckVidSopr(KatSopr.VidSopr)
    boCheckPodr := True;

  SkladProizv(wOtkuda);

  var wResult : word;
  wResult := 0;

  if (KatSopr.vidSopr = 600 OR KatSopr.vidSopr = 607) AND coGetTune('Sklad.Akt_Move.BeforeOrderCheckNal')<>0 //lf_
    wResult := RunInterface('M_MNPLAN::SimpleWayToRunAlgorithm', coGetTune('Sklad.Akt_Move.BeforeOrderCheckNal'),
                            word(2600), KatSopr.NRec, comp(0));

  if (KatSopr.vidSopr = 606 ) AND coGetTune('Sklad.Sklad_Trans.BeforeOrderCheckNal')<>0
    wResult := RunInterface('M_MNPLAN::SimpleWayToRunAlgorithm', coGetTune('Sklad.Sklad_Trans.BeforeOrderCheckNal'),
                            word(2606), KatSopr.NRec, comp(0));

  if (wResult = cmNo) or (wResult = cmDefault)
  {
    MyLog(''#3+'По результатам выполнения алгоритма'+''#13+
            ''#3+'формирование ордеров запрещено');//,Information);

    frm1wed.Write(katsopr.nSopr + ' от ' + DateToStr(katsopr.Dsopr,'DD.MM.YYYY')  +  ' katsopr.nRec=' + String(katsopr.nRec) + '=' + String(katsopr.nRec,0,0));
    frm1wed.AbortForm;
    if ((wDefine and 16) <> 16)
    {
      DoneMCInfo;
      oModifOrds.ClearSemaphoreSklad('KatSopr_MakeMove', KatSopr.NRec);
    }
    Exit;
  }
  MyLog('MakeMove->MakeMove 031');

  if (wResult = cmCancel)
     MyLog(''#3+'В процессе выполнения алгоритма произошли ошибки!'+''#13+
               ''#3+'Формировать ордера? - ДА!'); // , Confirmation + YesNo) <> cmYes
     if false
     {
       frm1wed.Write(katsopr.nSopr + ' от ' + DateToStr(katsopr.Dsopr,'DD.MM.YYYY')  +  ' katsopr.nRec=' + String(katsopr.nRec) + '=' + String(katsopr.nRec,0,0));
       frm1wed.AbortForm;
       if ((wDefine and 16) <> 16)
       {
         DoneMCInfo;
         oModifOrds.ClearSemaphoreSklad('KatSopr_MakeMove', KatSopr.NRec);
       }
       Exit;
     }
  MyLog('MakeMove->MakeMove 032');

  // Контроль наличия МЦ на указанном складе
  oSDfuns.MakeRes_Init (UserName, string(KatSopr.NRec)); //инициализация резервирования

  if NOT make_rash
    ResTov := 0;
  else
    case KatSopr.VidSopr of
    //---------------------
      503,
      504,
      506:
        {
          if ((wDefine and 4) = 4)
          {
            ResTov := 0;
            //Проверка на наличие в производстве перед оприходованием
            if (wGetTune('Manuf.CntrlSpisSyr') = 0)
              if (NOT CheckNalMCManuf(KatSopr.NRec, TRUE, dForm, wParam))
              {
                frm1wed.Write(katsopr.nSopr + ' от ' + DateToStr(katsopr.Dsopr,'DD.MM.YYYY')  +  ' katsopr.nRec=' + String(katsopr.nRec) + '=' + String(katsopr.nRec,0,0));
                frm1wed.AbortForm;
                DoneMCInfo;
                oSDfuns.MakeRes_Done(UserName, string(KatSopr.NRec), FALSE ); //конец резервирования
                oModifOrds.ClearSemaphoreSklad('KatSopr_MakeMove', KatSopr.NRec);
                Exit;
              }
            if (Not NullVipRef(Debug_Mnf_Obj)) FreeVipInterFace(Debug_Mnf_Obj);
          }// #end
        }
    //---------------------
      else
        ResTov := CheckNalTov(dForm, Counts)
    //---------------------
    end; //case
  MyLog('MakeMove->MakeMove 033');

  if ((wDefine and 4) = 4)
  {
    if (KatSopr.VidSopr = 501)
    { //Взаимозаменяемость и превышение лимитов
      if ((wDefine and 128) = 128)
      {
        DatOpr := dForm;
        #include MakeZam.vpp
      }
    };
  }

  if ((ResTov AND 4) <> 0)
    {
      frm1wed.Write(katsopr.nSopr + ' от ' + DateToStr(katsopr.Dsopr,'DD.MM.YYYY')  +  ' katsopr.nRec=' + String(katsopr.nRec) + '=' + String(katsopr.nRec,0,0));
      frm1wed.AbortForm;
      if ((wDefine and 16) <> 16)
      {
        DoneMCInfo;
        oModifOrds.ClearSemaphoreSklad('KatSopr_MakeMove', KatSopr.NRec);
      }
                             //--
      oSDfuns.MakeRes_Done(UserName, string(KatSopr.NRec), FALSE ); //конец резервирования
      DeleteSaldoRaz;
      Exit;
    }

  MyLog('MakeMove->MakeMove 034');
  MTov := ShowNalMKRMsg2Log(ResTov);

  if (NOT MTov)
    {
      
      frm1wed.Write(katsopr.nSopr + ' от ' + DateToStr(katsopr.Dsopr,'DD.MM.YYYY')  +  ' katsopr.nRec=' + String(katsopr.nRec) + '=' + String(katsopr.nRec,0,0));
      frm1wed.AbortForm;

      /*  // Весь Интерактив отключаем
      if ((wParam and _s2o__DEFINED) <> 0)
      {
        if (KatSopr.VidSopr = 501)
        {
          var vParamMB: word;
          if (not readMyDsk(vParamMB, 'MsgBatch_wParamInt' + 'MsgBatch', true))
            vParamMB := 0;
          if ((vParamMB and word(1)) = word(1))
            frm1wed.AbortForm;
          else
            frm1wed.ShowFile;
        }
        else
        {
          frm1wed.ShowFile;
        };
      }
      else
      {
        frm1wed.ShowFile;
      };
     */
      if ((wDefine and 16) <> 16)
      {
        DoneMCInfo;
        oModifOrds.ClearSemaphoreSklad('KatSopr_MakeMove', KatSopr.NRec);
      }

      oSDfuns.MakeRes_Done(UserName, string(KatSopr.NRec), FALSE ); //конец резервирования
      DeleteSaldoRaz;
      Exit;
    }

  MyLog('MakeMove->MakeMove 035');
  var b_ResStoreControl: boolean;
  b_ResStoreControl :=  ( (((KatSopr.VidSopr < 501) or (508 < KatSopr.VidSopr)) and (boGetTune('Sklad.Akt_Move.CheckRes')))
                       or ((501 <= KatSopr.VidSopr) and (KatSopr.VidSopr <= 508) and (wGetTune('Manuf.ResStoreControl') = 1))
                        );

  if (b_ResStoreControl)
    if make_prih and (GetFirst KatPodr where ((KatSopr.cPodrTo == KatPodr.nRec)) = tsOk)
      _Loop SpSopr
      {
        if (KatPodr.cResHr <> 0) AND (KatMC.cResHr <> 0)
          if (KatMC.cResHr <> KatPodr.cResHr)
          {
            MyLog('Не совпадают ресурсы хранения склада ("'+KatPodr.Name+
                       '") и МЦ ("'+KatMC.Name+'"). Продолжить? - ДА'); // , Confirmation + YesNo) <> cmYes
            if false
            {
              frm1wed.AbortForm;
              if ((wDefine and 16) <> 16)
              {
                DoneMCInfo;
                oModifOrds.ClearSemaphoreSklad('KatSopr_MakeMove', KatSopr.NRec);
              }

              oSDfuns.MakeRes_Done(UserName, string(KatSopr.NRec), FALSE ); //конец резервирования
              DeleteSaldoRaz;
              Exit;
            }
          }
      }

  MyLog('MakeMove->MakeMove 036');
//--- Конец контроля наличия МЦ на складе ----
  wResult := 0;

  if (KatSopr.vidSopr = 600 OR KatSopr.vidSopr = 607) AND coGetTune('Sklad.Akt_Move.BeforeOrder')<>0 //lf_
    wResult := RunInterface('M_MNPLAN::SimpleWayToRunAlgorithm', coGetTune('Sklad.Akt_Move.BeforeOrder'),
                            word(2600), KatSopr.NRec, comp(0));

  if (KatSopr.vidSopr = 606 ) AND coGetTune('Sklad.Sklad_Trans.BeforeOrder')<>0
    wResult := RunInterface('M_MNPLAN::SimpleWayToRunAlgorithm', coGetTune('Sklad.Sklad_Trans.BeforeOrder'),
                            word(2606), KatSopr.NRec, comp(0));
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  if (KatSopr.VidSopr = 210)
    if (coGetTune('UKS.RunAlgoritm.AktOutObrMontag.BeforeOrder') <> 0)
    {
      wResult := RunInterface( 'M_MNPLAN::SimpleWayToRunAlgorithm'
                             , coGetTune('UKS.RunAlgoritm.AktOutObrMontag.BeforeOrder')
                             , word(2210)
                             , KatSopr.NRec
                             , comp(0));
    }

  if (KatSopr.VidSopr = 229)
    if (coGetTune('UKS.RunAlgoritm.AktOutMatStroy.BeforeOrder') <> 0)
    {
      wResult := RunInterface( 'M_MNPLAN::SimpleWayToRunAlgorithm'
                             , coGetTune('UKS.RunAlgoritm.AktOutMatStroy.BeforeOrder')
                             , word(2229)
                             , KatSopr.NRec
                             , comp(0));
    }

//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

  MyLog('MakeMove->MakeMove 037');
  if (wResult = cmNo) or (wResult = cmDefault)
    {
      MyLog(''#3+'По результатам выполнения алгоритма'+''#13+
              ''#3+'формирование ордеров запрещено'); //,Information);

      frm1wed.Write(katsopr.nSopr + ' от ' + DateToStr(katsopr.Dsopr,'DD.MM.YYYY')  +  ' katsopr.nRec=' + String(katsopr.nRec) + '=' + String(katsopr.nRec,0,0));
      frm1wed.AbortForm;

      if ((wDefine and 16) <> 16)
      {
        DoneMCInfo;
        oModifOrds.ClearSemaphoreSklad('KatSopr_MakeMove', KatSopr.NRec);
      }

      oSDfuns.MakeRes_Done(UserName, string(KatSopr.NRec), FALSE ); //конец резервирования
      DeleteSaldoRaz;
      Exit;
    }

  MyLog('MakeMove->MakeMove 038');
  if (wResult = cmCancel)
      MyLog(''#3+'В процессе выполнения алгоритма произошли ошибки!'+''#13+
               ''#3+'Формировать ордера? - ДА!'); // , Confirmation + YesNo) <> cmYes
     if false
     {
       frm1wed.AbortForm;
       if ((wDefine and 16) <> 16)
       {
         DoneMCInfo;
         oModifOrds.ClearSemaphoreSklad('KatSopr_MakeMove', KatSopr.NRec);
       }

       oSDfuns.MakeRes_Done(UserName, string(KatSopr.NRec), FALSE ); //конец резервирования
       DeleteSaldoRaz;
       Exit;
     }

  MyLog('MakeMove->MakeMove 039');
  //для управления качеством продукции
  #ifdef _Quality_Journal_
   MyLog('MakeMove->def _Quality_Journal_');
  if RunInterface('M_QUALITY::RunQualAlg', KatSopr.NRec, comp(0),
                   KatSopr.VidSopr, dForm, word(109)) = cmCancel
    {
      if ((wDefine and 16) <> 16)
      {
        DoneMCInfo;
        oModifOrds.ClearSemaphoreSklad('KatSopr_MakeMove', KatSopr.NRec);
      }

      oSDfuns.MakeRes_Done(UserName, string(KatSopr.NRec), FALSE); //конец резервирования
      DeleteSaldoRaz;
      Exit;
    }
  #end
  MyLog('MakeMove->MakeMove 040');

  // Формирование ордеров. Общие поля здесь добавлять:
  var sDescr, sDesGr : string;
  wMode_ := 900 + wOtkuda;

  sDescr := if(boGetTune('Doc.NaslDescr'), KatSopr.Descr, sGetTune('User.Descr'));
  sDesGr := if(boGetTune('Doc.NaslDescr'), KatSopr.DesGr, sGetTune('User.DesGr'));

  if (make_rash)
  {
    if GetFirst SaldoRazCh where (( KatSopr.nRec      == SaldoRazCh.cSaldTune and
                                    wMode_            == SaldoRazCh.wMode     and
                                    KatSopr.cPodrFrom == SaldoRazCh.cPodr     and
                                    KatSopr.cMOLFrom  == SaldoRazCh.cMOL      and
                                    (1                =  SaldoRazCh.fReserv) )) = tsOK
    {
      if (GetFirst SpOrderCh where ((SaldoRazCh.cKitKau == SpOrderCh.nRec)) = tsOk)
        if (GetFirst SklOrder where (( SpOrderCh.cSklOrder == SklOrder.nRec )) = tsOk)
        {
          SklOrder.dOrd     := dForm;
          SklOrder.YearOrd  := Year(SklOrder.dOrd);
          SklOrder.Descr    := sDescr;
          SklOrder.DesGr    := sDesGr;
          if (UpDate Current SklOrder <> tsOk)
          {
            MyLog('Невозможно сформировать расходный ' + GetVidUchName( wOtkuda ) + '...');// , CancelButton);
            frm1wed.Write(katsopr.nSopr + ' от ' + DateToStr(katsopr.Dsopr,'DD.MM.YYYY')  +  ' katsopr.nRec=' + String(katsopr.nRec) + '=' + String(katsopr.nRec,0,0));
            frm1wed.AbortForm;
            if ((wDefine and 16) <> 16)
            {
              DoneMCInfo;
              oModifOrds.ClearSemaphoreSklad('KatSopr_MakeMove', KatSopr.NRec);
            }

            oSDfuns.MakeRes_Done(UserName, string(KatSopr.NRec), FALSE); //конец резервирования
            DeleteSaldoRaz;
            Exit;
          }
        }
    }
    else
    {
      ClearBuffer(#SklOrder);
      SklOrder.cSopr    := KatSopr.NRec;
      SklOrder.dOrd     := dForm;
      SklOrder.YearOrd  := Year(SklOrder.dOrd);
      SklOrder.Descr    := sDescr;
      SklOrder.DesGr    := sDesGr;

      var pPodrF : comp; pPodrF := KatSopr.cPodrFrom;

      if (GetFirst KatPodr where((pPodrF == KatPodr.NRec)) = tsOk)
        SklOrder.cGrPodr := KatPodr.cGrPodr;

      StRn := StVn := 0;

      NomPrih := NomRash := '';

      // Формирование расходного ордера
      SklOrder.cPodr    := KatSopr.cPodrFrom;
      SklOrder.cMol     := KatSopr.cMolFrom;
      SklOrder.VidOrder := 1;
      SklOrder.TipOrd   := wTipOrd;
      SklOrder.SP       := wOtkuda;
      SklOrder.NOrder   := oModifOrds.GetNextNOrderTekDate(FALSE, KatSopr.cPodrFrom, SkPr, dForm);
      SklOrder.NRec := 0;

      if (Insert Current SklOrder <> tsOk)
      {
        MyLog('Невозможно сформировать расходный ' + GetVidUchName( wOtkuda ) + '...');// , CancelButton);
        frm1wed.Write(katsopr.nSopr + ' от ' + DateToStr(katsopr.Dsopr,'DD.MM.YYYY')  +  ' katsopr.nRec=' + String(katsopr.nRec) + '=' + String(katsopr.nRec,0,0));
        frm1wed.AbortForm;
        if ((wDefine and 16) <> 16)
        {
          DoneMCInfo;
          oModifOrds.ClearSemaphoreSklad('KatSopr_MakeMove', KatSopr.NRec);
        }

        oSDfuns.MakeRes_Done(UserName, string(KatSopr.NRec), FALSE); //конец резервирования
        DeleteSaldoRaz;
        Exit;
      }
    }

    oMSview.AddPrimechOrd(SklOrder.Nrec, KatSopr.Name);   //Добавление примечания в ордер
  }
  MyLog('MakeMove->MakeMove 041');

  NomRash := SklOrder.NOrder;

  set SRash := SklOrder.NRec;

  // Формирование приходного ордера
  MyLog('MakeMove make_prih = ' + string(make_prih));// , CancelButton);
  MyLog('MakeMove make_rash = ' + string(make_rash));// , CancelButton);

  if (make_prih)
  {
    MyLog('MakeMove if (make_prih) = true');// , CancelButton);
    wMode_ := 900 + wKuda;
    if GetFirst SaldoRazCh where (( KatSopr.nRec      == SaldoRazCh.cSaldTune and
                                    wMode_            == SaldoRazCh.wMode     and
                                    KatSopr.cPodrTo   == SaldoRazCh.cPodr     and
                                    KatSopr.cMOLTo    == SaldoRazCh.cMOL      and
                                    (0                =  SaldoRazCh.fReserv) )) = tsOK
    {
   MyLog('MakeMove if GetFirst SaldoRazCh where (( KatSopr.nRec      == SaldoRazCh.cSaldTune and    = tsOK ');// , CancelButton);
      if (GetFirst SpOrderCh where ((SaldoRazCh.cKitKau == SpOrderCh.nRec)) = tsOk)
        if (GetFirst SklOrder where (( SpOrderCh.cSklOrder == SklOrder.nRec )) = tsOk)
        {
          SklOrder.dOrd     := dForm;
          SklOrder.YearOrd  := Year(SklOrder.dOrd);
          SklOrder.Descr    := sDescr;
          SklOrder.DesGr    := sDesGr;

          if (UpDate Current SklOrder <> tsOk)
          {
            MyLog('Невозможно сформировать приходный ' + GetVidUchName( wKuda )   + '...');// , CancelButton);
            Delete SklOrder where ((KatSopr.NRec == SklOrder.cSopr));
            if ((wDefine and 16) <> 16)
            {
              DoneMCInfo;
              oModifOrds.ClearSemaphoreSklad('KatSopr_MakeMove', KatSopr.NRec);
            }

            frm1wed.Write(katsopr.nSopr + ' от ' + DateToStr(katsopr.Dsopr,'DD.MM.YYYY')  +  ' katsopr.nRec=' + String(katsopr.nRec) + '=' + String(katsopr.nRec,0,0));
            frm1wed.AbortForm;
            oSDfuns.MakeRes_Done(UserName, string(KatSopr.NRec), FALSE ); //конец резервирования
            DeleteSaldoRaz;
            Exit;
          }
        }
    }
    else
    {
      MyLog('MakeMove if GetFirst SaldoRazCh where (( KatSopr.nRec      == SaldoRazCh.cSaldTune and   <> tsOK ');// , CancelButton);
      SklOrder.cSopr    := KatSopr.NRec;
      SklOrder.dOrd     := dForm;
      SklOrder.YearOrd  := Year(SklOrder.dOrd);
      SklOrder.Descr    := sDescr;
      SklOrder.DesGr    := sDesGr;

      var pPodrT: comp; pPodrT := KatSopr.cPodrTo;

      if (GetFirst KatPodr where((pPodrT == KatPodr.NRec)) = tsOk)
        SklOrder.cGrPodr := KatPodr.cGrPodr;

      SkPr := wkuda;

      SklOrder.cPodr    := KatSopr.cPodrTo;
      SklOrder.cMol     := KatSopr.cMolTo;
      SklOrder.VidOrder := 0;
      SklOrder.TipOrd   := wTipOrd;
      SklOrder.SP       := wKuda;
      SklOrder.NOrder   := oModifOrds.GetNextNOrderTekDate(TRUE, KatSopr.cPodrTo, SkPr, dForm);
      SklOrder.dOrd     := dForm;
      SklOrder.NRec     := 0;

      if (Insert Current SklOrder <> tsOk)
      {
        MyLog('Невозможно сформировать приходный ' + GetVidUchName( wKuda )   + '...');// , CancelButton);
        Delete SklOrder where ((KatSopr.NRec == SklOrder.cSopr));
        if ((wDefine and 16) <> 16)
        {
          DoneMCInfo;
          oModifOrds.ClearSemaphoreSklad('KatSopr_MakeMove', KatSopr.NRec);
        }

        frm1wed.Write(katsopr.nSopr + ' от ' + DateToStr(katsopr.Dsopr,'DD.MM.YYYY')  +  ' katsopr.nRec=' + String(katsopr.nRec) + '=' + String(katsopr.nRec,0,0));
        frm1wed.AbortForm;
        oSDfuns.MakeRes_Done(UserName, string(KatSopr.NRec), FALSE ); //конец резервирования
        DeleteSaldoRaz;
        Exit;
      }
    }

    oMSview.AddPrimechOrd(SklOrder.Nrec, KatSopr.Name);   //Добавление примечания в ордер
  MyLog('MakeMove->MakeMove 042');

    NomPrih := SklOrder.NOrder;
    SPrih   := SklOrder.NRec;
    Skpr    := 0;

    RealSum := RealSumV := 0;

    if (KatSopr.VidSopr = 606)
    {
      PushPos(#SpSopr);

      _LOOP SpSopr
      {
        RealSum  += SpSopr.KolFact * SpSopr.Price;
        RealSumV += SpSopr.KolFact * SpSopr.VPrice;
      }

      PopPos(#SpSopr);

      RealSum  := KatSopr.Summa  / RealSum;
      RealSumV := KatSopr.SumVal / RealSumV;
    }
  }

  if ((wDefine and 16) <> 16)
    StartNewVisual(0, vfSilent, '', 0);

  delete all Pick where (( 7 == Pick.wList));

  _LOOP SpSopr
  {
    ClearBuffer(#Pick);

    Pick.wList := 7;
    Pick.cRec  := SpSopr.cMCUsl;

    insert Current Pick;
  }
  MyLog('MakeMove->MakeMove 043');

  // выгружаем остатки по всем МЦ из НВП
  Store_Init;

  Store_ReInit;

  if (KatSopr.VidSopr = 607)
    Store_SkladProizv(2);
  else
    Store_SkladProizv(wOtkuda);

  boNastrRazrez := False;
  wMRazrez := wGetTune('Oper.Razrez');

  if (wOtkuda = 0) and (boGettune('Sklad.Akt_Move.MetodSpis')) and (wGetTune('Oper.L_F') = 0)
  {
    boNastrRazrez := True;
    if wMRazrez = 1
      wMRazrez := 2+4+8;

    Store_Run(dForm,
              comp(-2), // МЦ из Pick
              if ((wMRazrez and 2) <> 0, if (KatSopr.cPodrFrom = 0, comp(-1), KatSopr.cPodrFrom), 0), // 0 - по всем складам
              if ((wMRazrez and 4) <> 0, if (KatSopr.cMolFrom  = 0, comp(-1), KatSopr.cMolFrom ), 0), // 0 - по всем МОЛ
              0, // 0 - по всем партиям
              if ((wMRazrez and 2) <> 0, TRUE, FALSE),  // False - группировка по Складу
              if ((wMRazrez and 4) <> 0, TRUE, FALSE),  // False - группировка по МОЛ
              if ((wMRazrez and 8) <> 0, TRUE, FALSE)); // False - группировка по партии
  }
  else
    Store_Run(dForm,
              comp(-2),
              if (KatSopr.cPodrFrom = 0, comp(-1), KatSopr.cPodrFrom),
              if (KatSopr.cMolFrom  = 0, comp(-1), KatSopr.cMolFrom ),
              0,
              TRUE, TRUE, TRUE);

  Store_Done;

  if ((wDefine and 16) <> 16)
    StopVisual('', 0);

  var boInsSp : boolean;

  MyLog('MakeMove->MakeMove 044');
//--- ФОРМИРОВАНИЕ СПЕЦИФИКАЦИИ ОРДЕРОВ -------------------------------

  PushPos(#SpSopr);
  var countNpp, countNpp1 : word;
  countNpp := countNpp1 := 1;

  if (GetFirst SpSopr = tsOk)
  {
    if ((wDefine and 16) <> 16)
      StartNewVisual(vtIndicatorVisual, vfTimer, 'Формирование ордеров', Counts);

    _LOOP SpSopr
    {
      if ((wDefine and 16) <> 16)
        NextVisual;
      else
        if NOT NextVisual
        {
          WasInterrupted := TRUE;
          PopPos(#SpSopr);
          DeleteSaldoRaz;
          Exit
        }

      if f_KolIsZero(SpSopr.kolFact)
        Continue;

      case KatSopr.VidSopr of
      //---------------------
          501, 504, 210, 229: // для производства и УКС - не проверять на отрицательное количество
            { }
        //---------------------
          else
            if (SpSopr.kolFact < 0) AND (KatSopr.waDoc <> adSoprDocSNSell) //количество не должно быть отрицательным, не сторнирующая накладная
              Continue;
        //---------------------
      end;

      // Формирование спецификации расходного ордера ----------------
      if oMSview.GetMethodSpisPodr(KatSopr.cPodrFrom) = 3 // lf_
        oModifOrds.SetSemaphoreSklad('LF_' + string(KatSopr.cPodrFrom), SpSopr.cMCUsl);

      SpOrder.SP        := wOtkuda;
      SpOrder.TipOrd    := wTipOrd;
      SpOrder.VidOrder  := 1;
      SpOrder.dOrd      := dForm;
      SpOrder.ccMOl     := KatSopr.cMolFrom;
      SpOrder.ccPodr    := KatSopr.cPodrFrom;
      SpOrder.cMC       := SpSopr.cMcUsl;
      SpOrder.cParty    := SpSopr.cParty;
      SpOrder.nRec      := GetNextNRec(#SpOrder, 0);  //необходим nrec, чтобы привязать specMTR
      SpOrder.cSklOrder := SRash;
      SpOrder.ostatok   := 0;
      SpOrder.ostatokN  := 0;

      set SpOrder.cSpSopr := SpSopr.NRec;

      erfl := FALSE;

      SpOrder.Kol := SpSopr.KolFact * fEdIzm.GetKoefOtpEd(SpSopr.cOtpEd);

      if (wGetTune('Sklad.RoundKol') = 1)
        SpOrder.kol := Round(SpOrder.kol, bGetTune('Round.KolSign'));

      if (wGetTune('Sklad.DiskretKol') = 2)
        fEdIzm.CheckKolDiskretAll (SpOrder.kol, fEdIzm.GetUchOtpEdNRec(KatMC.nRec, 1), KatMC.cEd, TRUE, FALSE );

      if boGetTune('Oper.MultiCurrReg')  // "Многовалютный учет",
        cTMP1 := if (IsValid(#KatParty), KatParty.cValPar, 0)
      else
        cTMP1 := if( wGetTune('Oper.ValOrder') = 0, SpSopr.cVal, oValFunc.ValBase);

      bIsTmpSaldo1 := False;

      SpOrder.cVal := CalcPriceNastrCU(SpSopr.cMCUsl, KatSopr.cPodrFrom, KatSopr.cMolFrom, SpSopr.cParty, SpSopr.cVal, SpSopr.nRec,
                      if(KatSopr.VidSopr = 607, 2, wOtkuda), dForm);

      var boFindOrd : boolean;
      boFindOrd := False;

      if GetFirst SaldoRazCh where (( KatSopr.nRec      == SaldoRazCh.cSaldTune and
                                      wMode_            == SaldoRazCh.wMode     and
                                      SpSopr.nrec       == SaldoRazCh.cObj      and
                                      SpOrder.cMC       == SaldoRazCh.cMC       and
                                      SpOrder.ccPodr    == SaldoRazCh.cPodr     and
                                      SpOrder.ccMOL     == SaldoRazCh.cMOL     )) = tsOK
      {
        //для ЛИФО/ФИФО для расходного восст.остаток в соотв.приходном
        if (boCheckPodr)
          oOrdLIFO.RestoreOnePrihOrd(True, SaldoRazCh.cKitKau);

        SpOrder.NPP  := countNpp++;
        SpOrder.nRec := SaldoRazCh.cKitKau;
        boFindOrd := True;
      }

      if (boCheckPodr)
      {
        SpOrder.SrPrice := SpSopr.Price / fEdIzm.GetKoefOtpEd(SpSopr.cOtpEd);
        SpOrder.VPrice  := if (cTMP1 <> 0, SpSopr.VPrice / fEdIzm.GetKoefOtpEd(SpSopr.cOtpEd), 0);

        if GetFirst SpOrder1 where (( SpSopr.cSpOrder == SpOrder1.nRec )) =tsOk
        {
          SpOrder.srPrice := SpOrder1.srPrice;
          SpOrder.vPrice  := SpOrder1.vPrice;
        }

        SpOrder.cSpOrder := ModifyRestComing; // модификация остатка прихода и SpSopr.cSpOrder:= 0;
      }
      else
      {
        if (SpSopr.wADocSp  = adSoprDocSNSell)  And
           (SpOrder.VidOrder = 1)
        {
          var tADocSp: comp;  tADocSp := SpSopr.cADocSp;
          if (GetFirst SpOrder1 where (( tADocSp == SpOrder1.cSpSopr And
                                         word(1) == SpOrder1.VidOrder )) = tsOk)
          {
            SpOrder.srPrice := SpOrder1.srPrice;
            SpOrder.vPrice  := SpOrder1.vPrice;
          }
          else
          {
            SpOrder.SrPrice := dSrPrice;
            SpOrder.VPrice  := dvPrice;
          }
        }
        else
        {
          SpOrder.SrPrice := dSrPrice;
          SpOrder.VPrice  := dvPrice;
        }
      }

      var wCorrectPricePoOrder: word; wCorrectPricePoOrder := 0;

      case KatSopr.VidSopr of
      //---------------------
        501, 503, 504, 506:
          wCorrectPricePoOrder := wGetTune('Manuf.Nakl' + string(KatSopr.VidSopr) + '.ParamOpr');
      //---------------------
      end;

      if (wCorrectPricePoOrder = 2)
      {
        if (isValid(#KatOtpEd))
        {
          SpOrder.SrPrice  := SpSopr.Price/KatOtpEd.Koef;

          if (cTMP1 <> 0)
            SpOrder.VPrice := SpSopr.VPrice/KatOtpEd.Koef;
        }
        else
        {
          SpOrder.SrPrice  := SpSopr.Price;

          if (cTMP1 <> 0)
            SpOrder.VPrice := SpSopr.VPrice;
         }
      }

      SpOrder.rSrPrice := SpOrder.SrPrice;
      SpOrder.rVPrice  := SpOrder.VPrice;
      SpOrder.srPrice  := FRoundRubOrd(SpOrder.vidOrder, SpOrder.srPrice * SpOrder.kol) / SpOrder.kol;
      SpOrder.vPrice   := FRoundValOrd(SpOrder.vidOrder, SpOrder.vPrice  * SpOrder.kol) / SpOrder.kol;
      SpOrder.Descr    := sDescr;
      SpOrder.DesGr    := sDesGr;

      if (make_rash)
      {
        if (oMTRFun.CheckTuneSpisMC(coSpSopr, SpSopr.nRec) < cgSpisTune_NoNalOst) and (KatSopr.vidsopr <> 551)
        {
          oMTRFun.CopySpecMTR(coSpSopr, SpSopr.nRec, coSpOrder, SpOrder.nRec);
          //AddSaldoMtr;
        }
        else
        {
          CKS.vfKoef := if(KatOtpEd.koef <> 0, KatOtpEd.koef, 1);

          if UksCheckKolSpis(false, dForm, wGetTune('Reserv.PrSchSklad'), oMTRFun.GetKitKau(coSpSopr, SpSopr.nRec),
                             SpSopr.cMcUsl, KatSopr.cPodrFrom, KatSopr.cMolFrom, SpSopr.cParty, SpSopr.KolFact)
          {
            oMTRFun.CopySpecMTR(coSpSopr, SpSopr.NRec, coSpOrder, SpOrder.NRec);
            //AddSaldoMtr;
          }
          else
           if (oMTRFun.CheckTuneSpisMC(coSpSopr, SpSopr.nRec) > cgSpisTune_NoNalOst) // переносим из ЦУ для списания
             if coGetTune('CelUchForModul.SPIS') > 0
                 if UksCheckKolSpis(false, dForm, wGetTune('Reserv.PrSchSklad'), oMTRFun.GetKitKau(coSaldTune, coGetTune('CelUchForModul.SPIS')),
                                    SpSopr.cMcUsl, KatSopr.cPodrFrom, KatSopr.cMolFrom, SpSopr.cParty, SpSopr.KolFact)
                 {
                   oMTRFun.CopySpecMTR(coSaldTune, coGetTune('CelUchForModul.SPIS'), coSpOrder, SpOrder.nRec);
                   //AddSaldoMtr;
                 }
        }

        boInsSp := False;

        if (boFindOrd)
        {
          if (oModifOrds.AnySpOrder_Update(TypeSpOrder(SpOrder.buffer)) = tsOk)
            boInsSp := True;
        }
        else
          if (oModifOrds.AnySpOrder_Insert(TypeSpOrder(SpOrder.buffer)) = tsOk)
            boInsSp := True;

        if (not boInsSp)
        {
          MyLog('Невозможно вставить "' + KatMC.Name + '"'#13 +
                  'в расходный ' + GetVidUchName( wOtkuda ) + ' № ' + NomRash + '...');// , CancelButton);

          erfl := TRUE;

          if oMSview.GetMethodSpisPodr(KatSopr.cPodrFrom) = 3
            oModifOrds.ClearSemaphoreSklad('LF_'+string(KatSopr.cPodrFrom), SpSopr.cMCUsl);

          Break;
        }
        else
        {
          iKolRasx ++;

          // удаление зарезервированных позиций при списании
          DelSaldoMtr;

          RunInterface('L_SMETA::CopySpDocSmeta', coSpSopr, SpSopr.NRec, coSpOrder, SpOrder.NRec);

          oSDfuns.MakeRes_Del(0, 0, SpOrder.cMC, SpOrder.ccPodr, SpOrder.ccMol, SpOrder.cParty, 0, SpOrder.Kol);

          var _PrCor, _PrMod : boolean;

          _PrCor := FALSE;
          _PrMod := TRUE;

          AfterSpRashInserted(dForm, _PrCor, _PrMod);

          SpSopr.dOprTTN := dForm;

          if update current SpSopr <> tsOk
            MyLog('Не обновилась запись спецификации');// , Warning);

          oModifOrds.AnySpOrder_Update(TypeSpOrder(SpOrder.buffer));

          if (NOT ModifyTekOst)
            prmod := FALSE;
        }
      }

      if NOT (make_prih)
        StRn += SpOrder.srPrice * SpOrder.Kol;

      if NOT make_rash // нет создания расх. ордера
        if GetFirst SpOrder1 where (( SpSopr.NRec == SpOrder1.cSpSopr AND
                                      word(1)     == SpOrder1.vidOrder )) = tsOk
          { //если уже был сформирован расх.ордер то цены берем из него
            SpOrder.cVal    := SpOrder1.cVal;
            SpOrder.SrPrice := SpOrder1.SrPrice;
            SpOrder.VPrice  := SpOrder1.vPrice;

            wasRashOrd := true;
          }
        else // нет расх. ордера
          {
            if SpOrder.srPrice = 0  // если нет учетной цены, то из накладной берем
              {
                SpOrder.cVal    := SpSopr.cVal;
                SpOrder.SrPrice := SpSopr.price/KatOtpEd.Koef;
                SpOrder.VPrice  := SpSopr.vPrice/KatOtpEd.Koef;
              }

            wasRashOrd := false;

            insert current SpOrder; // без OneSpOrder_insert - только для построения приходного
          }

      if make_rash
        if NOT oLFBase.SetLF_Prices(FALSE, SpOrder.nrec, SpSopr.nRec, wasErr_LF, frmLF.Handle)
        {
          erfl := TRUE;

          if oMSview.GetMethodSpisPodr(KatSopr.cPodrFrom) = 3
            oModifOrds.ClearSemaphoreSklad('LF_' + string(KatSopr.cPodrFrom), SpSopr.cMCUsl);

          Break;
        }

      // Формирование спецификации приходного ордера -------------------------
      if (make_prih)
        _LOOP SpOrderPr where (( SpSopr.NRec == SpOrderPr.cSpSopr AND
                                 word(1)     == SpOrderPr.VidOrder ))
        {
          SpOrderEx.Buffer   := SpOrderPr.Buffer;
          SpOrderEx.NRec     := 0;
          SpOrderEx.ccMol    := KatSopr.cMolTo;
          SpOrderEx.VidOrder := 0;
          SpOrderEx.ccPodr   := KatSopr.cPodrTo;
          SpOrderEx.SP       := wKuda;
          SpOrderEx.TipOrd   := wTipOrd;
          SpOrderEx.cSpSopr  := SpSopr.NRec;
          SpOrderEx.cSpOrder := 0;
          SpOrderEx.ostatok  := SpOrderEx.kol;
          SpOrderEx.ostatokN := SpOrderEx.kol;
          SpOrderEx.priceN   := SpOrderEx.PriceN;
          SpOrderEx.SummN    := SpOrderEx.SummN;

          //для налогового учета
          if boGetTune('Oper.NalUch')
            case KatSopr.VidSopr of
              501, 503, 551, 552, 229, 210:
              {
                NalT(SpOrderEx.dOrd, SpOrderEx.cMC, 0, 0, 0); //т.к. возврат по продажной цене и средние по предпр.

                //дальше нельзя использовать Averageprice т.к. она изменена NalT(..., 0, 0, 0)
                SpOrderEx.priceN := AveragePriceN; //это приход
                SpOrderEx.SummN  := SpOrderEx.PriceN * SpOrderEx.Kol;
                SpOrderEx.SummN  := oSaldo_K.RoundRubOrd(SpOrderEx.PriceN, SpOrderEx.Kol) * SpOrderEx.Kol;
              }
            end;

          SpOrderEx.rSrPrice := SpOrderEx.rSrPrice; //оставляет из расходного
          SpOrderEx.rVPrice  := SpOrderEx.rVPrice;  //оставляет из расходного

          if (KatSopr.VidSopr = 606)
          {
            SpOrderEx.rSrPrice := SpOrderEx.rSrPrice * RealSum;

            if (SpOrderEx.rVPrice <> 0)
              SpOrderEx.rVPrice := SpOrderEx.rVPrice * RealSumV;

            SpOrderEx.SrPrice := oSaldo_K.RoundRubOrd(SpOrderEx.rSrPrice, SpOrderEx.Kol);  // lf_
            SpOrderEx.VPrice  := oSaldo_K.RoundValOrd(SpOrderEx.rVPrice , SpOrderEx.Kol);  // lf_
          }

          SpOrderEx.cSklOrder := SPrih;
          SpOrderEx.Descr     := sDescr;
          SpOrderEx.DesGr     := sDesGr;

          boInsSp := False;

          if GetFirst SaldoRazCh where (( KatSopr.nRec      == SaldoRazCh.cSaldTune and
                                          wMode_            == SaldoRazCh.wMode     and
                                          SpSopr.nrec       == SaldoRazCh.cObj      and
                                          SpOrderEx.cMC     == SaldoRazCh.cMC       and
                                          SpOrderEx.ccPodr  == SaldoRazCh.cPodr     and
                                          SpOrderEx.ccMOL   == SaldoRazCh.cMOL     )) = tsOK
          {
            SpOrderEx.nRec := SaldoRazCh.cKitKau;
            SpOrderEx.NPP  := countNpp1++;

            if (oModifOrds.AnySpOrder_Update(TypeSpOrder(SpOrderEx.buffer)) = tsOk)
              boInsSp := True;
          }
          else
            if (oModifOrds.AnySpOrder_Insert(TypeSpOrder(SpOrderEx.buffer)) = tsOk)
              boInsSp := True;

         if (not boInsSp)
         {
           MyLog('Невозможно вставить "' + KatMC.Name + '"'#13'в приходный ' + GetVidUchName( wKuda ) + ' № ' + NomPrih);// , CancelButton);
           erfl := TRUE;

           if oMSview.GetMethodSpisPodr(KatSopr.cPodrFrom) = 3
             oModifOrds.ClearSemaphoreSklad('LF_'+string(KatSopr.cPodrFrom), SpSopr.cMCUsl);

           Break;
         }
         else
         {
           oMtrCount.MtrCheckDocs (coSpOrder, SpOrderEx.nRec, SpOrderEx.VidOrder, true);

            oMTRFun.CopySpecMTR(coSpSopr, SpSopr.NRec, coSpOrder, SpOrderEx.NRec);

            RunInterface('L_SMETA::CopySpDocSmeta', coSpSopr, SpSopr.NRec, coSpOrder, SpOrderEx.NRec);

            oMtrCount.MtrCheckDocs(coSpOrder, SpOrderEx.nRec, SpOrderEx.VidOrder, false);

            ModifyTekOst;
            iKolPrih++;
          }

          StRn += SpOrderEx.srPrice * SpOrderEx.Kol;
        } // _L  SpOrderEx where ((SpSopr.NRec == SpOrderEx.cSpSopr AND 1 == SpOrderEx.vidOrder )) LF_

      if not (make_rash OR wasRashOrd)
        delete SpOrderEx where ((SpSopr.nRec == SpOrderEx.cSpSopr and word(1) == SpOrderEx.vidOrder ));

      if oMSview.GetMethodSpisPodr(KatSopr.cPodrFrom) = 3 //lf_
        oModifOrds.ClearSemaphoreSklad('LF_'+string(KatSopr.cPodrFrom), SpSopr.cMCUsl);
    } // LOOP SpSopr

    if ((wDefine and 16) <> 16)
    {
      StopVisual('', 0);
      DoneMCInfo;
    }

    DeleteSaldoRaz;
  MyLog('MakeMove->MakeMove 045');
  if ((wDefine and 4096) <> 0)
  { SaveMyDsk(word(4096),'SerialN_Mess');
  }

    if (make_rash) And (SpSopr.VidSopr <> 115)
      if ((wDefine and 8) = 8)
        if (not oSMultChoice.MoveSerialSkl(SRash, True, false, True))
          if (not boGettune('Doc.SerialN.CanSpis'))
            if (oMakeOrder.DeleteOrders(KatSopr.NRec, False, make_prih, make_rash, wMode, wParam))
            {
              PopPos(#SpSopr);
              oModifOrds.ClearSemaphoreSklad('KatSopr_MakeMove', KatSopr.NRec);
              //ShowTune('Невозможно создать складской ордер без указания серийных номеров!', 'Doc.SerialN.CanSpis');
              _error := 'Невозможно создать складской ордер без указания серийных номеров! (Doc.SerialN.CanSpis)';
              mylog(_error);
              SaveMyDsk(word(0),'SerialN_Mess');
              Exit;
            }
  if ((wDefine and 4096) <> 0)
  { SaveMyDsk(0,'SerialN_Mess');
  }


    if (make_prih)
      if ((wDefine and 8) = 8)
        oSMultChoice.MoveSerialSkl(SPrih, true, true, False);
  } // if GetFirst SpSopr

  PopPos(#SpSopr);

  //конец резервирования
  oSDfuns.MakeRes_Done(UserName, string(KatSopr.NRec), FALSE);

  MyLog('MakeMove->MakeMove 046');
  // для SoprHoz'ов ------
  var lFilialNo: longint; lFilialNo := lGetTune('Konsolid.FilialNo');

  if (GetFirst SoprHoz
        where ((KatSopr.VidSopr == SoprHoz.TipDoc AND
                KatSopr.NRec    == SoprHoz.cSoprDoc)) = tsOk)
    {}

  if (erfl)
  {
    //--- Откат от сформированных ордеров при ошибке их формирования.
    MyLog('При формировании ордеров были ошибки.'#13#13+
            'Сейчас произойдет отмена операции формирования ордеров.'); // , Information);

    oMakeOrder.DeleteOrders(KatSopr.NRec, False, make_prih, make_rash, wMode, wParam);
  }
  else
  {
    SoprHoz.SummaSp := StRn;

    StVn := if (KatSopr.cValut = 0, 0, oValFunc.GetAnyCurrency(0, StRn, SklOrder.dOrd, KatSopr.cValut));

    SoprHoz.SumValSp := StVn;
    SoprHoz.FilialNo := lFilialNo;
set SoprHoz.kodValSp := cTMP1;

    iSHoz.UpdByHanEx(SoprHoz.BufferP); //для накладной

    ResetBounds(#SoprHoz);

    //---По  расходному ордеру
    //вставить доработку для производства 160 и 260

    SoprHoz.TipDoc   := GetSoprHozTipDoc(wOtkuda, 1); //250, 260;
    SoprHoz.cSoprDoc := SRash;
    SoprHoz.Direct   := 2;
    SoprHoz.NoDoc    := NomRash;
    SoprHoz.cHozOper := 0;
    SoprHoz.DatOb    := dForm;
    SoprHoz.prObor   := 0;
    SoprHoz.TiDkGal  := SoprHoz.TipDoc;
    SoprHoz.NRec     := 0;
    SoprHoz.FilialNo := lFilialNo;
    SoprHoz.Descr    := sDescr;
    SoprHoz.DesGr    := sDesGr;

    if (make_rash)
      iSHoz.InsByHan(SoprHoz.BufferP);

    //---По приходному ордеру
    if (make_prih)
    {
      SoprHoz.TipDoc   := GetSoprHozTipDoc(wKuda, 0); //150, 160;
      SoprHoz.cSoprDoc := sPrih;
      SoprHoz.Direct   := 1;
      SoprHoz.NoDoc    := NomPrih;
  set SoprHoz.NRec     := 0;
      SoprHoz.TiDkGal  := SoprHoz.TipDoc;
      SoprHoz.FilialNo := lFilialNo;

      iSHoz.InsByHan(SoprHoz.BufferP);
    }

    SetBounds(#SoprHoz);
    RereadRecord(#SpSopr);

    MakeMoveForSHK := TRUE;

  MyLog('MakeMove->MakeMove before 101 108');
//------- для нештатного использования ------------------
// ---- взято из makeorder_prih.vpp ---------------------
    if (KatSopr.vidSopr = 101 Or KatSopr.vidSopr = 108) And
       (coGetTune('Oper.Buy.Nakl.AfterOrder') <> 0)
    {

  MyLog('MakeMove->MakeMove before 101 108 SimpleWayToRunAlgorithm');
      if RunInterface( 'M_MNPLAN::SimpleWayToRunAlgorithm'
                     , coGetTune('Oper.Buy.Nakl.AfterOrder')
                     , word(2101)
                     , KatSopr.NRec
                     , comp(0)
                     ) <> cmCancel
        {}
    }
//--------------------------------------
    
    if (KatSopr.vidSopr = 600 OR KatSopr.vidSopr = 607) AND coGetTune('Sklad.Akt_Move.AfterOrder') <> 0 //lf_
      if RunInterface('M_MNPLAN::SimpleWayToRunAlgorithm', coGetTune('Sklad.Akt_Move.AfterOrder'), word(2600), KatSopr.NRec, comp(0)) <> cmCancel {};

    if (KatSopr.vidSopr = 606 ) AND coGetTune('Sklad.Sklad_Trans.AfterOrder') <> 0
      if RunInterface('M_MNPLAN::SimpleWayToRunAlgorithm', coGetTune('Sklad.Sklad_Trans.AfterOrder'), word(2606), KatSopr.NRec, comp(0)) <> cmCancel {};

    if (KatSopr.vidSopr = 612 ) AND coGetTune('Sklad.Akt_Nedost.AfterOrder') <> 0
      if RunInterface('M_MNPLAN::SimpleWayToRunAlgorithm', coGetTune('Sklad.Akt_Nedost.AfterOrder'), word(2612), KatSopr.NRec, comp(0)) <> cmCancel {};

//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    if (KatSopr.VidSopr = 210) And
       (coGetTune('UKS.RunAlgoritm.AktOutObrMontag.AfterOrder') <> 0)
    {
      if RunInterface( 'M_MNPLAN::SimpleWayToRunAlgorithm'
                     , coGetTune('UKS.RunAlgoritm.AktOutObrMontag.AfterOrder')
                     , word(2210)
                     , KatSopr.NRec
                     , comp(0)
                     ) <> cmCancel
        {};
    }

    if (KatSopr.VidSopr = 229) And
       (coGetTune('UKS.RunAlgoritm.AktOutMatStroy.AfterOrder') <> 0)
    {
      if RunInterface( 'M_MNPLAN::SimpleWayToRunAlgorithm'
                     , coGetTune('UKS.RunAlgoritm.AktOutMatStroy.AfterOrder')
                     , word(2229)
                     , KatSopr.NRec
                     , comp(0)
                     ) <> cmCancel
        {};
    }
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  MyLog('MakeMove->MakeMove 047');

    //для управления качеством продукции
    #ifdef _Quality_Journal_
    if RunInterface('M_QUALITY::RunQualAlg', KatSopr.NRec, comp(0),
                    KatSopr.VidSopr, dForm, word(110)) <> cmCancel  {};
    #end // #ifdef _Quality_Journal_

    // проведение операций с ячейками хранения
    if ((wDefine and 16) <> 16)
    {
     MyLog('операции с ячейками хранения');
      if (make_prih OR make_rash) // только если формируются прих/расх ордера
      if ((KatSopr.vidSopr = 501) or
          (KatSopr.vidSopr = 502) or
          (KatSopr.vidSopr = 503) or
          (KatSopr.vidSopr = 504) or
          (KatSopr.vidSopr = 506) or
          (KatSopr.vidSopr = 551) OR //ремонты <- Склад
          (KatSopr.vidSopr = 600))
        if (boGetTune('Oper.useBoxes') AND
            (wGetTune('Oper.BoxAuto') <> 0))
        {
          var i: word;
          var bFlagBoxR : boolean;
          bFlagBoxR := True;

          PushPos(#SklOrder);
          PushPos(#SpOrder);

          if ((wDefine and 32) <> 32)
            if (wGetTune('Oper.BoxAuto') = 2)
            {
                MyLog('Произвести операции с ячейками хранения? - НЕТ'); // , Confirmation + YesNo) <> cmYes
                bFlagBoxR := False;
            }

          if ( bFlagBoxR )
            if (GetFirst SklOrder where ((KatSopr.NRec == SklOrder.cSopr)) = tsOk)
            {
              delete novisual Pick where ((word(831) == Pick.wList));
              i := 0;

              _LOOP SklOrder where ((KatSopr.NRec == SklOrder.cSopr))
                _LOOP SpOrder where ((SklOrder.NRec == SpOrder.cSklOrder)) ordered by index SpOrder14
                {
                  ClearBuffer(#Pick);
                  Pick.wList := 831;
                  Pick.cRec  := SpOrder.NRec;
                  Pick.PickNum := i;
                  i++;
                  insert current Pick;
                }

              if (wGetTune('Oper.Box.MovePodr') = 1) and (KatSopr.cPodrFrom = KatSopr.cPodrTo)
              {
                _LOOP Pick where (( word(831) == Pick.wList ))
                {
                  if (GetFirst SpOrder where (( Pick.cRec == SpOrder.nRec )) <> tsOk)
                    Continue;

                  if (SpOrder.vidOrder = 1)
                    if (GetFirst InBoxP where (( word(1)         == InBoxP.wType and
                                                 SpOrder.cSpSopr == InBoxP.cSpSopr )) <> tsOk)
                      if GetVipRef(PAutoPlan, 'BoxAutoPlan')
                        if PAutoPlan.UseBox(true)
                          PAutoPlan.MakePlanMove(KatSopr.nRec, SpOrder.cSpSopr, False);
                }
              }

              if (not pBoxFuncs1.RaspredSpisSpOrders(dForm, if((wDefine and 32) = 32, FALSE, TRUE), FALSE))
                if (wGetTune('Oper.Box.MakeOrd') = 0)
                {
                  //ShowTune('Запрещено создание ордеров при невозможности полного распределения по ячейкам хранения!', 'Oper.Box.MakeOrd');
                  _error := 'Запрещено создание ордеров при невозможности полного распределения по ячейкам хранения! (Oper.Box.MakeOrd)';
                  mylog(_error);
                  if ((wDefine and 16) <> 16)
                    oModifOrds.ClearSemaphoreSklad('KatSopr_MakeMove', KatSopr.NRec);

                  oMakeOrder.DeleteOrders(KatSopr.NRec, False, make_prih, make_rash, wMode, wParam);
                  DeleteSaldoRaz;
                  Exit;
                }

              delete novisual Pick where ((word(831) == Pick.wList));
            }

          PopPos(#SpOrder);
          PopPos(#SklOrder);
        } // if vid = 600
    }
    else
    {
      var i: longint; i := 0;

      _LOOP SklOrder where ((KatSopr.NRec == SklOrder.cSopr))
      {
        ClearBuffer(#Pick);
        Pick.wList := 830;
        Pick.cRec  := SklOrder.NRec;
        insert current Pick;


        if PaketAktsKomp_boxes
          _LOOP SpOrder where ((SklOrder.NRec == SpOrder.cSklOrder)) ordered by index SpOrder14
          {
            ClearBuffer(#Pick);

            Pick.wList   := 831;
            Pick.cRec    := SpOrder.NRec;
            Pick.PickNum := i++;

            insert current Pick;
          }
      }
    }

    var FlagOrd : boolean; FlagOrd := True;

    if ((wDefine and 16) <> 16)
    {
      if ((wDefine and 32) <> 32)
      {
        if ( make_prih and make_rash )
        {
          if (iKolRasx <> iKolPrih)
          {
            MyLog('При формировании ордеров произошли ошибки.'#13#13+
                        'Количество позиций по приходному ордеру не равно количеству по расходному ордеру. '#13#13+
                        'Удалить некорректные ордера?- НЕТ'); // , YesNo+Confirmation) = cmYes)
            if false
            {
              oMakeOrder.DeleteOrders(KatSopr.NRec, False, make_prih, make_rash, wMode, wParam);
              FlagOrd := False;
            }
          }
          else
            MyLog('Сформированы:'#13 +
                    ' - расходный ' + GetVidUchName( wOtkuda ) + ' №' + NomRash + ''#13 +
                    ' - приходный ' + GetVidUchName( wKuda )   + ' №' + NomPrih); // , Information);
        }

        if ( (not make_prih) and make_rash )
          MyLog('Сформирован расходный ' + GetVidUchName( wOtkuda ) + ' №' + NomRash); // , Information);

        if ( make_prih and (not make_rash) )
          MyLog('Сформирован приходный ' + GetVidUchName( wKuda )   + ' №' + NomPrih); // , Information);
      }

      if (NOT prmod)
        MyLog('Невозможно корректно модифицировать текущие остатки. Произведите их перерасчет.'); // , Information);
    }
    else
      PaketAktsKomp_abort := FALSE;

  MyLog('MakeMove->MakeMove 048');
    if (FlagOrd)
    {
      ReReadRecord(#KatSopr);
      set KatSopr.dOpr := dForm;
      update current KatSopr;

      if ( make_prih or make_rash )
      {
        if make_prih
          oUKSfuns.JoinSO(SPrih);

        if make_rash
          oUKSfuns.JoinSO(SRash);
      }

      if oMSview.GetMethodSpisPodr(KatSopr.cPodrFrom)=3
      {
        oMakeOrder.Divide_SpSopr_by_SpOrder(KatSopr.NRec);
        ReReadRecord(#SpSopr);
        CalcSrPrice;                 //пересчет цен в документе
        Update_Current_KatSopr;
      }
      else
      {
        var bCorrectPriceAfterOrder: boolean;

        bCorrectPriceAfterOrder := boGetTune('Sklad.PriceAfterMakeOrder');
        case KatSopr.VidSopr of
        //---------------------
          501, 503, 504, 506:
            if bCorrectPriceAfterOrder
              bCorrectPriceAfterOrder := (wGetTune('Manuf.Nakl' + string(KatSopr.VidSopr) + '.ParamOpr') = word(1));
        //---------------------
        end;

        if bCorrectPriceAfterOrder
        {
          CalcSrPrice;                 //пересчет цен в документе
          Update_Current_KatSopr;
        }
      }
    }
  }

  if ((wDefine and 16) <> 16)
    oModifOrds.ClearSemaphoreSklad('KatSopr_MakeMove', KatSopr.NRec);

  if wasErr_LF //LF_
    frmLF.showFile('Протокол ошибочных ситуаций');
  MyLog('MakeMove->MakeMove Fihish');

}
end.
