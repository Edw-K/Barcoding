/*************************************************************************************************\
*
*  Наименование: Алгоритм для смены статуса документов, при формировании и отмене складских ордеров
*  Контур/Модуль: КОУ
*  Примечание:
*  Вид работы  |Номер           |Дата    |Исполнитель              |Проект
*  -----------------------------------------------------------------------------------------------
\*************************************************************************************************/
// взято с проекта ЭМ
/*
Документы для алгоритма при формировании/отмене ордеров
	Накладная на прием МЦ (Управление снабжением)			101
	Накладная на возврат по рекламации (Управление снабжением)	206
	Накладная на отпуск МЦ (Управление сбытом)			201
	Акт о приемке материалов (Складской учет)			115
	Акт на списание МЦ со склада (Складской учет)			204
	Накладная на внутреннее перемещение (Складской учет)		600
	Накладная на передачу МЦ в ОС (Складской учет)			601
	Накладная на передачу МЦ в спецоснастку (Складской учет)	602
	Накладная на передачу МЦ в НМА (Складской учет)			605
	Акт инвентаризации об излишке МЦ (Складской учет)		611
	Акт инвентаризации о недостаче МЦ (Складской учет)		612
	Акт на пересортицу (Складской учет)				630
	Акт на перемещение между объектами (Складской учет)		632
	Акт передачи оборудования в монтаж (Складской учет)		210
	Транзитная накладная (Складской учет)				606
	Накладная на отпуск в производство (УПЛ)			501
	Накладная на приход готовой продукции (УПЛ)			502
  Накладная на возврат сырья из производства (УПЛ) 503
	Акт на списание МЦ из производства (УПЛ)			504
  Межцеховая накладная(УПЛ)  505
Для каждого типа документа может быть несколько комбинаций текущего и нового статуса.
Действие алгоритма - после формирования/отмены ордера проверять, что документ находится в статусе, определенном как <текущий>, и переводить его в статус, определенный как <новый> для конкретного текущего статуса.
Если документ при формировании/отмене ордера находится в статусе, отличном от перечисленных текущих статусов для этого действия, изменение статуса не производить, выводить сообщение.
*/
#include AlgCalc.vih
#include oAlgFldSys.vih
#include TMnPlan.vih
#include oAlgInDocList.vih
#include Algor.vih
#include StatLog.vih
#include SHK_Log.vih

#component "M_MnPlan"

VipInterface Algoritm_5959 Implements oAlgoritm_Sys #Licensed_Free;
Interface Algoritm_5959;

Var
 iVipStatLog : VipStatLog;//интерфейс истории изменений статусов
 oSHK_Log     : SHK_Log;

Create view
Var
 nrecFormPl    : Comp;//Настройка алгоритма
 nrecKatSopr   : Comp;//Накладная, для которой выполняется алгоритм
 nrecKatNotes  : Comp;//текущий статус накладной
 nrecKatNazna  : Comp;//текущее назначение накладной
 tipDocOper    : Word;//хранится вид накладной для поиска по полю KatSopr.vidSopr
 sklOrderExist : Word;//0-Ордера удалены, 1-Ордера сформированы
As Select
 If(isValid(tnKatDoc), KatDoc.name, string(tipDocOper)+' KatDoc.name - ?????')(Fieldname=nameKatDoc)
,If(isValid(tnKatNotesSopr), KatNotesSopr.Name, 'статус не определен')(FieldName=NotekatSopr)
,If(isValid(tnKatNaznaSopr), KatNaznaSopr.Name, 'Назначение не определен')(FieldName=NaznakatSopr)
,If(sklOrderExist=0, 'Ордера удалены', 'Ордера сформированы')(FieldName=sklOrderExistName)
From
 FormPl
,SpFormPl(SpFormPl02)
,Synonym SpFormPl SpFormPlNazna
,Synonym KatNotes KatNotesCur
,Synonym KatNotes KatNotesNew
,Synonym KatNotes KatNotesSopr
,Synonym KatNazna KatNaznaSopr
,KatSopr
,SklOrder
,KatDoc
,katsopr katsoprKN
Where
((
    nrecFormPl    == FormPl.NRec
And FormPl.NRec   == SpFormPl.cFormPl
And tipDocOper    == SpFormPl.typeRec
And sklOrderExist == SpFormPl.resWord1[1](NoIndex)//0-Ордера удалены, 1-Ордера сформированы
And nrecKatNotes  == SpFormPl.resComp1[1](NoIndex)//текущий статус

//Список назначений для настройки
And SpFormPl.cFormPl == SpFormPlNazna.cFormPl
And 1                == SpFormPlNazna.typeRec
And SpFormPl.nrec    == SpFormPlNazna.resComp1[1](NoIndex)

And nrecKatSopr     == KatSopr.nrec
And tipDocOper      == KatSopr.vidSopr(NoIndex)
And KatSopr.nrec    == SklOrder.cSopr
And KatSopr.vidSopr == KatDoc.tidkGal
And KatSopr.cNote   == KatNotesSopr.nrec
And KatSopr.cNazna  == KatNaznaSopr.nrec

And SpFormPl.resComp1[1] == KatNotesCur.nrec
And SpFormPl.resComp1[2] == KatNotesNew.nrec
))
;

//Номер системного алгоритма
Function GetNum: Word;
Begin
 GetNum := 5959;
End;

Function GetName: String;
Begin
 GetName := 'Смена статуса документов, при формировании и отмене складских ордеров';
End;

Function GetMemo(st: oSteckCommonString): Boolean;
Begin
 GetMemo := True;
 st.Push('959. '+GetName);
 st.Push('      Действие алгоритма - после формирования/отмены ордера проверять, что документ находится в статусе, определенном как "текущий", и переводить его в статус, определенный как "новый" для конкретного текущего статуса.');
 st.Push('      Если документ при формировании/отмене ордера находится в статусе, отличном от перечисленных текущих статусов для этого действия, изменение статуса не производить, выводить соощение.');
 st.Push('      Если выбрано одно или несколько назначений, то действие алгоритма распространять на документы с указанным назначением/назначениями.');
 st.Push('      При незаполненном параметре-назначении действие алгоритма распространять на документы.');
End;

Function GetNameInter: String;
Begin
 GetNameInter := 'Algoritm_'+string(GetNum);
End;

Function GetNameInterPr: String;
Begin
 GetNameInterPr := 'Algoritm_'+string(GetNum)+'_Setup';
End;

Function InitInter(Var pt: TRecAcc): Boolean;
Begin
#__UNUSED__(pt)
 InitInter := True;
End;

//Процедура смены статуса
Procedure SetKatSoprStatus;
Begin
 Var oldStatus   : Word;//предыдущий статус документа
 Var oldNote     : Comp;
 Var vidSoprLog  : Word;

 oldStatus := KatSopr.status;
 oldNote   := KatSopr.cNote;
 If(GetFirst FastFirstRow KatNotesNew = TsOk)
 {
  KatSopr.status := KatNotesNew.status;
  KatSopr.cNote  := KatNotesNew.nrec;
 }
 Else
 {
  KatSopr.status := 0;
  KatSopr.cNote  := Comp(0);
 }
 If(Update Current KatSopr = TsOk)
 {
  Case(KatSopr.vidSopr)Of
   101 //Накладная на прием МЦ (Управление снабжением)
  ,201 //Накладная на отпуск МЦ (Управление сбытом)
  ,206 //Накладная на возврат по рекламации (Управление снабжением)
  ,210://Акт передачи оборудования в монтаж (Складской учет)
   {
    vidSoprLog := 100;
   }
   Else
   {
    vidSoprLog := KatSopr.vidSopr;
   }
  End;
  //Функция вставки записи в историю изменения статуса документа
  iVipStatLog.StatLog_InsNewStat(vidSoprLog, KatSopr.nrec, oldStatus, oldNote
    , KatSopr.status, KatSopr.cNote, GetNameInter+' Автоматическое изменение статуса для дейст-я "'+sklOrderExistName+'"');
 }
End;

//-------------------------
Procedure MyWriteLog(_s:string);
{ oSHK_Log.Write(_s);
} //Procedure MyInitLog;

//Запуск алгоритма
Function RunInter(wflag: Word; Var pt: TRecAcc): Boolean;
Begin
#__UNUSED__(wflag)
 Var isShowLog : Boolean;//Вести и показать лог-файл смены статуса

 RunInter  := False;
 isShowLog  := True;
 nrecFormPl := pt.cFormPl;
 //Настройка алгоритма
 If(GetFirst FastFirstRow FormPl = TsOk)
 {
  isShowLog := (FormPl.resLngInt[1]<>0);
 }



 //If(isShowLog){IntInit;}
 oSHK_Log.Init('Alg5959.log', true, true, true);
 If(isShowLog){MyWriteLog('[' + DateToStr(Cur_Date,'DD.MM.YYYY ') + TimeToStr(Cur_Time,'HH:MM ') + UserName()+']');}
 If(isShowLog){MyWriteLog('Запуск алгоритма: '+GetNameInter+' "'+GetName+'"');}

 //Настройка алгоритма
 If(GetFirst FastFirstRow FormPl = TsOk)
 {
  If(isShowLog){MyWriteLog('Номер настройки алгоритма (pt.cFormPl): '+string(pt.cFormPl,0,0) );}
  If(isShowLog){MyWriteLog('Номер ссылки (pt.cpNrec): '+string(pt.cpNrec,0,0) );}
  If(isShowLog){MyWriteLog('Тип ссылки (pt.TypeCpNrec): '+string(pt.TypeCpNrec,0,0) );}

  tipDocOper  := pt.TypeCpNrec-2000;
  nrecKatSopr := pt.cpNrec;

  //20.04.2018
  //Накладная склад-ОС: В стандартном коде интерфейса запуска любого  алгоритма "После формирования ордеров выполнить алгоритм" ошибочно выгружается тип 2602 вместо 2601
  //Можно будет легко увидеть, что для "Накладная склад-ОС" и для "Накладная МЦ в спецоснастку" код будет одинаковым и равным 2602.
  //Аналогично выгружается 2600 вместо 2601, при работе алгоритма "После удления ордеров выполнить алгоритм".
  Case(pt.TypeCpNrec)Of
   /*2600,
   2601,
   2602,
   2630*/
   2000..2999:
   { tipDocOper:=pt.TypeCpNrec-2000;
     if getfirst KatSopr<>tsok
     { If(GetFirst FastFirstRow KatSopr Where((nrecKatSopr == KatSopr.nrec))=TsOk)
       {
         tipDocOper := KatSopr.ViDSopr;
       }
     }
   }
  End;

  If(isShowLog){MyWriteLog('Поиск документа: KatSopr.VidSopr='+string(tipDocOper)+' KatSopr.Nrec='+string(nrecKatSopr,0,0) );}

  /*
  var GP9961_flag:word;
  if ReadMyDsk(GP9961_flag,'Alg_GP961_flag',false) then
  {
  if GP9961_flag<>777 then
  {

  If(isShowLog){MyWriteLog('Документ является корректирующим');}
  if (KatSopr.wADoc = adSoprDocSNSell) or
     (KatSopr.wADoc = adSoprDocKNSell) or
     (KatSopr.wADoc = adSoprDocSN) or
     (KatSopr.wADoc = adSoprDocKN) then
     {
      SaveMyDsk(word(777),'Alg_GP961_flag');
     }
  }
  }
  */
  var tStr:string='';
  if (KatSopr.wADoc = adSoprDocSNSell) or
     (KatSopr.wADoc = adSoprDocSN)     or
     (KatSopr.wADoc = adSoprDocKNSell) or
     (KatSopr.wADoc = adSoprDocKN)
     then
      {
       if getfirst katsoprKN where ((katsopr.cadoc == katsoprKN.nrec))=tsok then
        {
          tStr:=' №'+KatSoprKN.Nsopr+' от '+DateToStr(katsoprKN.dsopr,'DD/MM/YYYY');
        }
      }
  if (KatSopr.wADoc = adSoprDocSNSell) or
     (KatSopr.wADoc = adSoprDocSN)    then   If(isShowLog){MyWriteLog('Является сторнирующим к документу'+tStr);}
  if (KatSopr.wADoc = adSoprDocKNSell) or
     (KatSopr.wADoc = adSoprDocKN)    then   If(isShowLog){MyWriteLog('Является корректирующим к документу'+tStr);}


  //Найдена накладная, для которой будет выполняться алгоритм
  If(GetFirst FastFirstRow KatSopr = TsOk)
  {
   nrecKatNotes := KatSopr.cNote;
   nrecKatNazna := KatSopr.cNazna;
   If(isShowLog){MyWriteLog('Документ: '+nameKatDoc+' № '+KatSopr.nSopr+' от '+DateToStr(KatSopr.dSopr,'DD/MM/YYYY')+' находится в статусе "'+notekatSopr+'" с назначением "'+naznakatSopr+'".');}

   //Наличие складских ордеров у накладной
   If(GetFirst FastFirstRow SklOrder = TsOk)
   {sklOrderExist := 1;}
   Else
   {sklOrderExist := 0;}

   If(isShowLog){MyWriteLog('Поиск настройки изменения статуса для действия "'+sklOrderExistName+'"');}
   //Цикл по спецификациям настройки алгоритма для данного типа документов и наличию/отсутствию ордеров
   var _wProgon:word;
   for(_wProgon:=1;_wProgon<=2;_wProgon++)
   { _Loop SpFormPl
     { If(isShowLog){MyWriteLog('Есть настройка для статуса')}
       //Указан фильтр назначений в настройке
       If(GetFirst SpFormPlNazna = TsOk)
       { if _wProgon=2 then continue;
         If(isShowLog){MyWriteLog('Есть фильтр для назначений')}
         Do
         { //назначение накладной присутствует в фильтре
           If(nrecKatNazna = SpFormPlNazna.resComp1[2])
           { RunInter := True;
             SetKatSoprStatus;//смена статуса
             Break;
           }
         }  While(GetNext SpFormPlNazna = TsOk)
       }
       Else
       { If(isShowLog){MyWriteLog('Нет фильтра для назначений')}
         if _wProgon=1 then continue;
         RunInter := True;
         SetKatSoprStatus;//смена статуса
       }
       If(RunInter)//Выполнено изменение статуса
       { RereadRecord(tnKatNotesSopr);
         If(isShowLog){MyWriteLog('Для изменения статуса выбрана настройка с номером (№ п/п): '+string(SpFormPl.descr)+' SpFormPl.nrec='+string(SpFormPl.nrec,0,0) );}
         If(isShowLog){MyWriteLog('Статус изменен на "'+NotekatSopr+'"');}
         Break;
       } //If(RunInter)//Выполнено изменение статуса
     } //_Loop SpFormPl
     If(RunInter)//Выполнено изменение статуса
        break;
   } //for(_wProgon:=1;_wProgon<=2;_wProgon++)
   /*
   If(Not RunInter)
   {
     //Не найдена настройка - смена статуса не проводилась
     Message('['+Cur_Date+' '+Cur_Time+' '+UserName+']'+' '+GetNameInter
             +''#13+'Статус документа '+LoCase(SubStr(nameKatDoc,1,1))+SubStr(nameKatDoc,2,255)+' № '+KatSopr.nSopr+' от '+KatSopr.dSopr+' в статусе "'+notekatSopr+'"'
             +''#13+'для действия "'+sklOrderExistName+'" не изменен.'
             +''#13+'Обратитесь к администратору.'
            );
   }*/
  }
  Else
  {
   If(isShowLog){MyWriteLog('Запись в KatSopr не найдена');}
  }
 }
 Else
 {
  If(isShowLog){MyWriteLog('Не найдена настройка алгоритма (pt.cFormPl): '+string(pt.cFormPl,0,0) );}
 }

 If(RunInter)
 {
  If(isShowLog){MyWriteLog('Изменение статуса выполнено успешно');}
  //20.04.2018
  //Ошибка в запуске алгоритма. Алгоритм должен запускаться после формирования ордеров.
  //Соотвтественно должна быть уже проставлена дата оприходования накладной, но это не так.
  //Если смотреть по журналу измениния записей, алгоритм запускается когда ордера сформированы, но дата оприходования не проставлена.
  //В алгоритме изменяется статус накладной и соответсвенно происходит конфликт модификации записи и не проставляется дата оприходования.
  //If(GetFirst FastFirstRow SklOrder = TsOk)
  //{
  // If(KatSopr.dOpr = ZeroDate)
  // {
  //  KatSopr.dOpr := SklOrder.dOrd;
  //  If(Update Current KatSopr = TsOk)
  //  {}
  // }
  //}
 }
 Else
 {
  If(isShowLog){MyWriteLog('Изменение статуса выполнено не было');}
 }

 //If(isShowLog){ShowErrors;}
 //If(isShowLog){ExitProc;}
 oSHK_Log.Done(true);
 result := true;
End;

End.
