//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 9.1
// Функции для работы с штрих кодом 
//------------------------------------------------------------------------------
#include DOfuns.vih
#include EditDoc.vih
#include NalogRegDoc.vih

interface iBarcodeFunc 'Функции для работы с штрихкодом';
show (,,46,5);
#include DOfuns.var
#include EditDoc.var

create view v01
var find_code: string;
as select * from barcode, barcodeLink, refTable,
  basedoc, katsopr, sklorder, invtab, plpor, dogovor, moveos,
  titledoc, strtitle, passports, spallstaff, factotpusk, iski,
  schfact, vvstroy, mtract, grsopr, katbox;

function getNew: string;
var tmp: string; rec: comp;
{
    result := '';
    rec := getnextnrec(#barcode, 0);
    clearbuffer(#barcode);
    set barcode.nrec = rec;
    if (insert current barcode <> tsOk) {
      message('При генерации штрих-кода возникла ошибка. ' + chr(13) +
              'Не удалось получить уникальный номер.', Error);
      exit;
    }
    if getfirst barcode where ((rec == nrec)) <> tsOk {}

    tmp := lpadch(barcode.counter, '0', 12);
    if (length(tmp) > 12) {
      message('Не удалось создать штрих-код', error);
      exit;
    }

    tmp += string(GetCheckDigitForBarcode(tmp));

    if (getfirst barcodeLink where ((tmp == barcode(length = 250))) = tsOk) {
      message('При генерации штрих-кода возникла ошибка. ' + chr(13) +
              'Сгенерированный штрих-код ''' + tmp + ''' уже есть в БД', error);
      exit;
    }
    result := tmp;
}

function getCode(_type: word; _link: comp; _create: boolean): string;
var _code: string;
{
    result := '';
    if (_type = 0) or (_link = 0) exit;

    if (getfirst barcodelink where ((_type == tidkgal and _link == csoprdoc)) = tsOk) {
      result := barcodelink.barcode;
    //message('У документа есть ШК: ''' + result + '''');
    }
    else
    if _create {
      _code := getNew;
      if (_code <> '') {
        insert barcodelink set
          tidkgal = _type,
          csoprdoc = _link,
          barcode = _code;
      }
      result := barcodelink.barcode;
    //message('Документу присвоен ШК: ''' + result + '''');
    }
    //else message('У документа отсутствует ШК');
}

function getDoc(_code: string; var _type: word; var _link: comp): boolean;
{
  _type := 0; _link := 0;
  result := (getfirst barcodelink where (( _code == barcode (length = 250) )) = tsOk);
  if result {
    _type := barcodelink.tidkgal;
    _link := barcodelink.csoprdoc;
  }
}

function getType(_table: word; _link: comp): word;
{
  result := 0;
  case _table of
    coBaseDoc: {
      if (getfirst basedoc where ((_link == nrec)) = tsOK)
        result := oDOfuns.GetTipHozOnVidDoc(basedoc.viddoc);
    }
    coKatSopr: {
      if (getfirst katsopr where ((_link == nrec)) = tsOK)
          result := katsopr.vidsopr;
    }
    coSklOrder: {
      if (getfirst sklorder where ((_link == nrec)) = tsOK)
        result := GetSoprHozTipDoc(sklorder.sp, sklorder.vidorder);
    }
    coInvTab: {
      if (getfirst invtab where ((_link == nrec)) = tsOK)
        case invtab.tipdoc of
          cgDoc_0015: result := cgDoc_0715;
          cgDoc_0016: result := cgDoc_0716;
        else 
          result := if(InvTab.TipDoc = 1, cgDoc_0616, cgDoc_0615);
        end;
    }
    coPlPor: {
      if (getfirst plpor where ((_link == nrec)) = tsOK)
        result := plpor.tidkgal;
    }
    coDover: {
      result := cgDoc_0760;
    }
    coDogovor: {
      if (getfirst dogovor where ((_link == nrec)) = tsOK)
        result := Dogovor.TiDk;
    }
    coMoveOs: {
      if (getfirst MoveOs where ((_link == nrec)) = tsOK)
        result := MoveOs.TipDoc*100 + MoveOs.SysOper;
    }
    coVvStroy: {
        if (getfirst VvStroy where ((_link == nrec)) = tsOK)
          result := 704 + if(VvStroy.wType = 5, 16, VvStroy.wType);
    }
    coTitleDoc: {
      if (getfirst titledoc where ((_link == nrec)) = tsOK)
          result := cgDoc_1800;
    }
    coStrTitle: {
      if (getfirst STRTITLE where ((_link == nrec)) = tsOK)
          result := cgDoc_1801;
    }
    coPassports: {
      if (getfirst Passports where ((_link == nrec)) = tsOK)
          result := cgDoc_1802;
    }
    coSpAllStaff: {
      if (getfirst SpAllStaff where ((_link == nrec)) = tsOK)
        result := cgDoc_1803;
    }
    /* coSchFact: {
      if (getfirst SchFact where ((_link == nrec)) = tsOK)
          result := if (SchFact.Direct = cwDirect_Sell, cwGlobalCodeSF_Sell, cwGlobalCodeSF_Buy);
    } */
    coFactOtpusk: {
      if (getfirst factotpusk where ((_link == nrec)) = tsOK)
        result := cgDoc_2006;
    }
    coIski: {
      if (getfirst iski where ((_link == nrec)) = tsOK)
        result := Iski.TiDk;
    }
    coMtrAct: {
      if (getfirst mtract where ((_link == nrec)) = tsOK)
        result := mtract.vidsopr;
    }
    coGrSopr: {
      if (getfirst grsopr where ((_link == nrec)) = tsOK)
        result := grsopr.vidsopr + 3000;
    }
  end;
}

//возможность формирования штрих кода по настройке и типу печатного документа в каталоге документов системы
function canCreate(_type: word): boolean;
{
  result := true;
  //(getfirst reftable where ((cgReg_Main == wAccount and cgSel_PrnBarCode == wMain
  //  and _type == wSub and word(1) == wTable1)) = tsOk);
}

function getCodeEx(_table: word; _link: comp): string;
var _type: word;
{
  _type := getType(_table, _link);
  result := getCode(_type, _link, canCreate(_type));
}
// показать документ
procedure show_doc(_type: word; _link: comp);
{
  case _type of
  coKatmc: runinterface('L_MCU::iViewMCUslCatal', 1, _link, 0, 0, 0); //coSpSopr, SpSopr.nRec
  coKatparty: runinterface('L_Katparty::katparty', _link);
  coKatbox: {//runinterface('L_Box::GetBox1', _link);
    if (getfirst katbox where ((_link == nrec)) = tsOk)
    //runinterface('L_Box::GetBox2', _link, katbox.cpodr, 0);
      runinterface('L_Box::KatBoxesEdit', _link, katbox.cpodr);
    //runinterface('L_Box::GetBoxIer', katbox.cpodr, 1, false, false, _link);
  }
  cgDoc_1058: runinterface('F_NalogReg::NalogRegDoc', cgiSingleEdit, _type, _link);
  else iEditDoc.runEditHozDocEx(_type, _link);
  end;
}

screen bkFind (,,sci1EnEsc);
fields
  find_code ('Введите штрихкод для поиска',,): noprotect;
buttons
  cmValue1,default,,'Поиск документов по штрих-коду',,sci1Esc;
  cmCancel;
<<

   `Штрихкод документа `  .@@@@@@@@@@@@@@@@@

  <.   Продолжить   .>   <.     Отмена     .>
>>
end; //screen

handleevent
cmValue1: {
  if (getfirst barcodeLink where ((find_code == barcode (length=250) )) = tsOk) {
    show_doc(barcodeLink.tidkgal, barcodeLink.csoprdoc);
  }
  else
    message('Штрихкод не найден!', information);
}
end;//he
end.