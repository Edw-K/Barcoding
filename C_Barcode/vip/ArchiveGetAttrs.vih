//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 9.1 
// Функции для работы с возможным перечнем документов и его атрибутами 
//------------------------------------------------------------------------------

#ifndef _AchiveGetAttrs_VIH_INCLUDED_
#define _AchiveGetAttrs_VIH_INCLUDED_

#component "C_Barcode"

#include archiveAttrs.inc
//#include barcodeFunc.vih
#doc
  Функции для работы с архивом документов
#end
objInterface iAchiveGetAttrs;
  #doc
    Установка возможных атрибутов для типа документа. Установка соответствующей таблицы и полей
  #end
  procedure SetAttr(TidkGal : word; wcoTable : word;
                    sNameAttr : string; sNameField : string;
                    sNameAttrSyn : string = '');
  procedure SetAttrWithCalc(TidkGal : word; wcoTable : word;
                    sNameAttr : string; sNameField : string; sCalcField : string;
                    sNameAttrSyn : string = '');
  procedure SetAttrWithNastr(TidkGal : word; wcoTable : word;
                    sNameAttr : string; sNastrName : string; wTypeNastr : word);
  #doc
    Добавление распознаваемого типа
  #end
  procedure SetRecognizableTidkGal(TidkGal : word);
  #doc
    Поддерживается модулем импорта значений тип документа
  #end
  function GetExistTidkGal(TidkGal : word) : boolean;
  #doc
    Возвращаются все поддерживаемые типы документов
  #end
  function GetAllTidkGal(var AttrTypeList : TDocAttrArray) : boolean;
end;

objInterface iAchiveGetAttrsEx1;
  procedure SetAttrCalcRef(TidkGal : word; wcoTable : word;
                    sNameAttr : string; sNameCalcField : string;
                    wcoTableRef : word; sNameFieldNrecRef : string; sNameFieldRef : string;
                    sNameAttrSyn : string = '');
end;

#doc
  Функция для получения всех типов у которых есть указанный атрибут
#end
ObjInterface iAchiveGetAttrsEx6;
  #doc
    Возвращаются все поддерживаемые типы документов атрибут sNameAttr
  #end
  function GetAllTidkGalByAttr(sNameAttr : string; var AttrTypeList : TDocAttrArray) : boolean;
end;

vipInterface AchiveGetAttrs implements iAchiveGetAttrs, iAchiveGetAttrsEx1,
                                       iAchiveGetAttrsEx6 licensed(free);

public:
  constructor Init;
end;

#doc
   Получение списка доступных атрибутов 
#end
ExtensionPoint epArchiveGetAvailableTableAndFields(objAchiveGetAttrs : iAchiveGetAttrs);
#doc
   расчет сложных атрибутов (использовать в крайнем случае)
#end
ExtensionPoint epArchiveGetValueComplexAttr(objAchiveGetAttrs : iAchiveGetAttrs; TiDkGal : word; sNameAttr : string);
#end

#declare GetStatusDocInfo(TidK,coTable,FieldStatus)
  objAchiveGetAttrs.SetAttrRef(#TidK, #coTable, lUSStatusName, '#FieldStatus', coKatNotes, 'NREC', 'NAME', '#FieldStatus');
  iAchiveGetAttrsEx2(objAchiveGetAttrs).SetAttrCalcRefByJoins(#TidK, #coTable, lUSOperSendPack,
                                                              'CASE WHEN RT1.ATTR IS NULL THEN ''0''' +
                                                              ' WHEN RT1.ATTR = 0 THEN' +
                                                              ' case' +
                                                              ' when RT.ATTR IS NULL THEN ''1''' +
                                                              ' else ''0'''+
                                                              ' end' +
                                                              ' ELSE' +
                                                              ' case' +
                                                              ' when RT.ATTR IS NULL THEN ''0''' +
                                                              ' else ''1'''+
                                                              ' end ' +
                                                              'END ');
  iAchiveGetAttrsEx2(objAchiveGetAttrs).AddJoinOnAtrr(#TidK, lUSOperSendPack, 1,
                                                      'left join RefTable RT on ' +
                                                      '(' + string(cgReg_Main) + ' = RT.wAccount' +
                                                      ' and ' + string(cgSel_StatusEHDDocRgh) + ' = RT.wMain' +
                                                      ' and ' + string(#TidK) + ' = RT.wSub' +
                                                      ' and ' + string(coKatNotes) + ' = RT.WTABLE1' +
                                                      ' and Table.#FieldStatus = RT.CRECORD1)');
  iAchiveGetAttrsEx2(objAchiveGetAttrs).AddJoinOnAtrr(#TidK, lUSOperSendPack, 2,
                                                      'left join RefTable RT1 on ' +
                                                      '(' + string(cgReg_Main) + ' = RT1.wAccount' +
                                                      ' and ' + string(cgSel_StatusEHDDocRgh) + ' = RT1.wMain' +
                                                      ' and ' + string(#TidK) + ' = RT1.wSub' +
                                                      ' and ' + string(coKatNotes) + ' = RT1.WTABLE1' +
                                                      ' and #comp(0) = RT1.CRECORD1)');
#end