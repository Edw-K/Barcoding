#component "L_MCU"
alter interface katmc ('');
#include barcodeFunc.var
overload
function Is_Correct_Fields: boolean;
end;
extendformats brmc1;
//------------------------------------------------------------------------------
function Is_Correct_Fields: boolean;
{
  result := inherited::Is_Correct_Fields;
  if result barcodeFunc.getCode(coKatmc, katmc.nrec, true);
  //set katmc.barkod2 = 
}
//----------------------------------------------- штрихкодирование помеченных мц
procedure generateBarcode;
//var bFuncParam: boolean; // переменная для неиспользуемых var-параметров (для избавления от предупреждения 'Передача константы в качестве var-параметра')
{
  if (pMarker.count = 0) pMarker.mark;
  startnewvisual(vtIndicatorVisual, vfTimer + vfBreak + vfConfirm, 'Штрихкодрование выделенных МЦ...', pMarker.count);
  pushpos(#katmc);
  subbounds(tbrmkatmc1);
  addbounds(tbrmkatmc2);

  _loop pMarker {
    if not nextvisual break;
    if (getfirst katmc where ((pMarker.pNRec == nrec)) != tsOK) continue;
    barcodeFunc.getCode(coKatmc, katmc.nrec, true);
/* не знаю зачем все это...
    bFuncParam := true; // фиктивная переменная
    if not IsUpdateCurMC(bFuncParam) continue;
    if fGetHashAn.IsEditRecord fGetHashAn.SetEditRecord(false);
*/
  //if (update current katmc <> tsOK) {}
  }
  subbounds(tbrmkatmc2);
  addbounds(tbrmkatmc1);
  poppos(#katmc);
  stopvisual('', 0);
  pMarker.unselectAll;
  rescanpanel(#katmc);
}
panel pan2;
browse brmc1;
table katmc
columns
  barcodeFunc.getCode(coKatmc, katmc.nrec, false) 'Штрихкод' ('Штрихкод записи',, sci178Esc): [13], protect;
end; //browse
end;//panel
handleevent
//cmValue4 реализовать проверку (ChkDiffBar) или пересчет (RecalcBarkodMC) по диалогу
cmValue38: generateBarcode;
end;
end.