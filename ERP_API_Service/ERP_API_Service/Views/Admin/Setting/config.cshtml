@model ERP_API_Service.Objects.ConfigurationSystem

@{
    ViewData["Title"] = "config";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h2>Настройки</h2>

@using (Html.BeginForm("config", "Setting", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <label class="control-label" style="visibility: hidden; color:red" id="warn_about_change">Есть несохранённые изменения!</label>

    <div class="row" style="font-size:20px">
        @Html.Label("Привязывать токен к пользователю", "Привязывать токен к пользователю", htmlAttributes: new { @id = "LinkImeiUser", @class = "control-label col-4" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.LinkImeiUser, new { htmlAttributes = new { @class = "form-check-input col-3", onchange = "Change_sett()" } })
            @Html.ValidationMessageFor(model => model.LinkImeiUser, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" style="font-size:20px">
        @Html.Label("Продолжительность жизни токена, с", "Продолжительность жизни токена, с", htmlAttributes: new { @class = "control-label col-md-6" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LifeTimeToken, new { htmlAttributes = new { @class = "form-control", onchange = "Change_sett()" } })
            @Html.ValidationMessageFor(model => model.LifeTimeToken, "", new { @class = "text-danger" })
        </div>
    </div>

    
    <div class="form-group" style="font-size:20px">
        @Html.Label("EndPoint ESB получения описателя объекта", "EndPoint ESB получения описателя объекта", htmlAttributes: new { @class = "control-label col-md-6" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ESB_GetDescrShk, new { htmlAttributes = new { @class = "form-control", onchange = "Change_sett()" } })
            @Html.ValidationMessageFor(model => model.ESB_GetDescrShk, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group" style="font-size:20px">
        @Html.Label("EndPoint ESB запроса объекта по идентификатору", "EndPoint ESB запроса объекта по идентификатору", htmlAttributes: new { @class = "control-label col-md-6" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ESB_GetObjectById, new { htmlAttributes = new { @class = "form-control", onchange = "Change_sett()" } })
            @Html.ValidationMessageFor(model => model.ESB_GetObjectById, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" style="font-size:20px">
        @Html.Label("EndPoint ESB выполнения синхронной операции", "EndPoint ESB выполнения синхронной операции", htmlAttributes: new { @class = "control-label col-md-6" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ESB_ExecOperation, new { htmlAttributes = new { @class = "form-control", onchange = "Change_sett()" } })
            @Html.ValidationMessageFor(model => model.ESB_ExecOperation, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" style="font-size:20px">
        @Html.Label("EndPoint ESB выполнения асинхронной операции", "EndPoint ESB выполнения асинхронной операции", htmlAttributes: new { @class = "control-label col-md-6" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ESB_ExecOperationAsync, new { htmlAttributes = new { @class = "form-control", onchange = "Change_sett()" } })
            @Html.ValidationMessageFor(model => model.ESB_ExecOperationAsync, "", new { @class = "text-danger" })
        </div>
    </div>

    <br />
    <br />
    <br />
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Сохранить" class="btn btn-light" style="font-size:20px" />
            <button type="button" class="btn btn-light" style="font-size:20px" onclick="location.href='@Url.Action("/setting/config")'">Отмена</button>
        </div>
    </div>
    <br />
</div>
}
<script>
    function Change_sett() {
        //$("#warn_about_change").removeClass("hidden");

        $('#warn_about_change').css("visibility", "visible");
    }
</script>
